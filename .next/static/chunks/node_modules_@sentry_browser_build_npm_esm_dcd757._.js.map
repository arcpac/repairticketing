{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"helpers.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/helpers.ts"],"sourcesContent":["import type { Mechanism, WrappedFunction } from '@sentry/core';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  captureException,\n  getOriginalFunction,\n  markFunctionWrapped,\n  withScope,\n} from '@sentry/core';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype WrappableFunction = Function;\n\nexport function wrap<T extends WrappableFunction>(\n  fn: T,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): WrappedFunction<T>;\nexport function wrap<NonFunction>(\n  fn: NonFunction,\n  options?: {\n    mechanism?: Mechanism;\n  },\n): NonFunction;\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap<T extends WrappableFunction, NonFunction>(\n  fn: T | NonFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n): NonFunction | WrappedFunction<T> {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn: T | NonFunction): fn is T {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn as WrappedFunction<T>).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function (this: unknown, ...args: unknown[]): unknown {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } as unknown as WrappedFunction<T>;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property as keyof T] = fn[property as keyof T];\n      }\n    }\n  } catch {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name')!;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"file":"request.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/tracing/request.ts"],"sourcesContent":["import {\n  SENTRY_XHR_DATA_KEY,\n  addPerformanceInstrumentationHandler,\n  addXhrInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport type { Client, HandlerDataXhr, SentryWrappedXMLHttpRequest, Span } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SentryNonRecordingSpan,\n  addFetchEndInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  browserPerformanceTimeOrigin,\n  getActiveSpan,\n  getTraceData,\n  hasTracingEnabled,\n  instrumentFetchRequest,\n  parseUrl,\n  setHttpStatus,\n  spanToJSON,\n  startInactiveSpan,\n  stringMatchesSomePattern,\n} from '@sentry/core';\nimport { WINDOW } from '../helpers';\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * List of strings and/or Regular Expressions used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * **Default:** If this option is not provided, tracing headers will be attached to all outgoing requests.\n   * If you are using a browser SDK, by default, tracing headers will only be attached to outgoing requests to the same origin.\n   *\n   * **Disclaimer:** Carelessly setting this option in browser environments may result into CORS errors!\n   * Only attach tracing headers to requests to the same origin, or to requests to services you can control CORS headers of.\n   * Cross-origin requests, meaning requests to a different domain, for example a request to `https://api.example.com/` while you're on `https://example.com/`, take special care.\n   * If you are attaching headers to cross-origin requests, make sure the backend handling the request returns a `\"Access-Control-Allow-Headers: sentry-trace, baggage\"` header to ensure your requests aren't blocked.\n   *\n   * If you provide a `tracePropagationTargets` array, the entries you provide will be matched against the entire URL of the outgoing request.\n   * If you are using a browser SDK, the entries will also be matched against the pathname of the outgoing requests.\n   * This is so you can have matchers for relative requests, for example, `/^\\/api/` if you want to trace requests to your `/api` routes on the same domain.\n   *\n   * If any of the two match any of the provided values, tracing headers will be attached to the outgoing request.\n   * Both, the string values, and the RegExes you provide in the array will match if they partially match the URL or pathname.\n   *\n   * Examples:\n   * - `tracePropagationTargets: [/^\\/api/]` and request to `https://same-origin.com/api/posts`:\n   *   - Tracing headers will be attached because the request is sent to the same origin and the regex matches the pathname \"/api/posts\".\n   * - `tracePropagationTargets: [/^\\/api/]` and request to `https://different-origin.com/api/posts`:\n   *   - Tracing headers will not be attached because the pathname will only be compared when the request target lives on the same origin.\n   * - `tracePropagationTargets: [/^\\/api/, 'https://external-api.com']` and request to `https://external-api.com/v1/data`:\n   *   - Tracing headers will be attached because the request URL matches the string `'https://external-api.com'`.\n   */\n  tracePropagationTargets?: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * Flag to disable tracking of long-lived streams, like server-sent events (SSE) via fetch.\n   * Do not enable this in case you have live streams or very long running streams.\n   *\n   * Disabled by default since it can lead to issues with streams using the `cancel()` api\n   * (https://github.com/getsentry/sentry-javascript/issues/13950)\n   *\n   * Default: false\n   */\n  trackFetchStreamPerformance: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nconst responseToSpanId = new WeakMap<object, string>();\nconst spanIdToEndTimestamp = new Map<string, number>();\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  trackFetchStreamPerformance: false,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(client: Client, _options?: Partial<RequestInstrumentationOptions>): void {\n  const {\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    tracePropagationTargets,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    trackFetchStreamPerformance: defaultRequestInstrumentationOptions.trackFetchStreamPerformance,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  const shouldAttachHeadersWithTargets = (url: string): boolean => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    // Keeping track of http requests, whose body payloads resolved later than the initial resolved request\n    // e.g. streaming using server sent events (SSE)\n    client.addEventProcessor(event => {\n      if (event.type === 'transaction' && event.spans) {\n        event.spans.forEach(span => {\n          if (span.op === 'http.client') {\n            const updatedTimestamp = spanIdToEndTimestamp.get(span.span_id);\n            if (updatedTimestamp) {\n              span.timestamp = updatedTimestamp / 1000;\n              spanIdToEndTimestamp.delete(span.span_id);\n            }\n          }\n        });\n      }\n      return event;\n    });\n\n    if (trackFetchStreamPerformance) {\n      addFetchEndInstrumentationHandler(handlerData => {\n        if (handlerData.response) {\n          const span = responseToSpanId.get(handlerData.response);\n          if (span && handlerData.endTimestamp) {\n            spanIdToEndTimestamp.set(span, handlerData.endTimestamp);\n          }\n        }\n      });\n    }\n\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n\n      if (handlerData.response && handlerData.fetchData.__span) {\n        responseToSpanId.set(handlerData.response, handlerData.fetchData.__span);\n      }\n\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry: PerformanceEntry): entry is PerformanceResourceTiming {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry as PerformanceResourceTiming).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nexport function extractNetworkProtocol(nextHopProtocol: string): { name: string; version: string } {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/') as [string, string];\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1] as string;\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time: number = 0): number {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming: PerformanceResourceTiming): [string, string | number][] {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData: [string, string | number][] = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nexport function shouldAttachHeaders(\n  targetUrl: string,\n  tracePropagationTargets: (string | RegExp)[] | undefined,\n): boolean {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href: string | undefined = WINDOW.location && WINDOW.location.href;\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return stringMatchesSomePattern(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch (e) {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        stringMatchesSomePattern(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && stringMatchesSomePattern(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function xhrCallback(\n  handlerData: HandlerDataXhr,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          attributes: {\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            'http.url': fullUrl,\n            url: sentryXhrData.url,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  if (shouldAttachHeaders(sentryXhrData.url)) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr: SentryWrappedXMLHttpRequest, span?: Span): void {\n  const { 'sentry-trace': sentryTrace, baggage } = getTraceData({ span });\n\n  if (sentryTrace) {\n    setHeaderOnXhr(xhr, sentryTrace, baggage);\n  }\n}\n\nfunction setHeaderOnXhr(\n  xhr: SentryWrappedXMLHttpRequest,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader!('baggage', sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"file":"debug-build.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/debug-build.ts"],"sourcesContent":["declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n"],"names":[],"mappings":"AAEA;;;;CAIA;;;AACO,MAAM,WAAY,GAAE,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA","ignoreList":[0]}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"file":"backgroundtab.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/tracing/backgroundtab.ts"],"sourcesContent":["import { SPAN_STATUS_ERROR, getActiveSpan, getRootSpan, logger, spanToJSON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeSpan = getActiveSpan();\n      if (!activeSpan) {\n        return;\n      }\n\n      const rootSpan = getRootSpan(activeSpan);\n\n      if (WINDOW.document.hidden && rootSpan) {\n        const cancelledStatus = 'cancelled';\n\n        const { op, status } = spanToJSON(rootSpan);\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Tracing] Transaction: ${cancelledStatus} -> since tab moved to the background, op: ${op}`);\n        }\n\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message: cancelledStatus });\n        }\n\n        rootSpan.setAttribute('sentry.cancellation_reason', 'document.hidden');\n        rootSpan.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;;;CAGA,GACO,SAAS,8BAA8B,GAAS;IACrD,6KAAI,SAAA,6KAAU,SAAM,CAAC,QAAQ,EAAE;iLAC7B,SAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;YACzD,MAAM,UAAA,iLAAa,gBAAA,AAAa,EAAE;YAClC,IAAI,CAAC,UAAU,EAAE;gBACf;YACR;YAEM,MAAM,QAAS,iLAAE,cAAA,AAAW,EAAC,UAAU,CAAC;YAExC,6KAAI,SAAM,CAAC,QAAQ,CAAC,MAAA,IAAU,QAAQ,EAAE;gBACtC,MAAM,eAAgB,GAAE,WAAW;gBAEnC,MAAM,EAAE,EAAE,EAAE,MAAA,EAAA,iLAAW,aAAA,AAAU,EAAC,QAAQ,CAAC;gBAE3C,IAAI,8LAAW,EAAE;oMACf,SAAM,CAAC,GAAG,CAAC,CAAC,uBAAuB,EAAE,eAAe,CAAC,2CAA2C,EAAE,EAAE,CAAC,CAAA,CAAA;gBACA;gBAEA,sFAAA;gBACA,4DAAA;gBACA,IAAA,CAAA,MAAA,EAAA;oBACA,QAAA,CAAA,SAAA,CAAA;wBAAA,IAAA,8KAAA,qBAAA;wBAAA,OAAA,EAAA,eAAA;oBAAA,CAAA,CAAA;gBACA;gBAEA,QAAA,CAAA,YAAA,CAAA,4BAAA,EAAA,iBAAA,CAAA;gBACA,QAAA,CAAA,GAAA,EAAA;YACA;QACA,CAAA,CAAA;IACA,CAAA,MAAA;wLACA,cAAA,oLAAA,SAAA,CAAA,IAAA,CAAA,oFAAA,CAAA;IACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"file":"browserTracingIntegration.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/tracing/browserTracingIntegration.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport {\n  addHistoryInstrumentationHandler,\n  addPerformanceEntries,\n  registerInpInteractionListener,\n  startTrackingINP,\n  startTrackingInteractions,\n  startTrackingLongAnimationFrames,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from '@sentry-internal/browser-utils';\nimport type { Client, IntegrationFn, Span, StartSpanOptions, TransactionSource } from '@sentry/core';\nimport {\n  GLOBAL_OBJ,\n  SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  TRACING_DEFAULTS,\n  browserPerformanceTimeOrigin,\n  generateTraceId,\n  getActiveSpan,\n  getClient,\n  getCurrentScope,\n  getDomElement,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  getRootSpan,\n  logger,\n  propagationContextFromHeaders,\n  registerSpanErrorInstrumentation,\n  spanIsSampled,\n  spanToJSON,\n  startIdleSpan,\n} from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\ninterface RouteInfo {\n  name: string | undefined;\n  source: TransactionSource | undefined;\n}\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions {\n  /**\n   * The time that has to pass without any span being created.\n   * If this time is exceeded, the idle span will finish.\n   *\n   * Default: 1000 (ms)\n   */\n  idleTimeout: number;\n\n  /**\n   * The max. time an idle span may run.\n   * If this time is exceeded, the idle span will finish no matter what.\n   *\n   * Default: 30000 (ms)\n   */\n  finalTimeout: number;\n\n  /**\n   The max. time an idle span may run.\n   * If this time is exceeded, the idle span will finish no matter what.\n   *\n   * Default: 15000 (ms)\n   */\n  childSpanTimeout: number;\n\n  /**\n   * If a span should be created on page load.\n   * If this is set to `false`, this integration will not start the default page load span.\n   * Default: true\n   */\n  instrumentPageLoad: boolean;\n\n  /**\n   * If a span should be created on navigation (history change).\n   * If this is set to `false`, this integration will not start the default navigation spans.\n   * Default: true\n   */\n  instrumentNavigation: boolean;\n\n  /**\n   * Flag spans where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundSpan: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * If true, Sentry will capture long animation frames and add them to the corresponding transaction.\n   *\n   * Default: false\n   */\n  enableLongAnimationFrame: boolean;\n\n  /**\n   * If true, Sentry will capture first input delay and add it to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableInp: boolean;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * Flag to disable tracking of long-lived streams, like server-sent events (SSE) via fetch.\n   * Do not enable this in case you have live streams or very long running streams.\n   *\n   * Default: false\n   */\n  trackFetchStreamPerformance: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableInteractions: boolean;\n    enableStandaloneClsSpans: boolean;\n  }>;\n\n  /**\n   * A callback which is called before a span for a pageload or navigation is started.\n   * It receives the options passed to `startSpan`, and expects to return an updated options object.\n   */\n  beforeStartSpan?: (options: StartSpanOptions) => StartSpanOptions;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableLongAnimationFrame: true,\n  enableInp: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nexport const browserTracingIntegration = ((_options: Partial<BrowserTracingOptions> = {}) => {\n  registerSpanErrorInstrumentation();\n\n  const {\n    enableInp,\n    enableLongTask,\n    enableLongAnimationFrame,\n    _experiments: { enableInteractions, enableStandaloneClsSpans },\n    beforeStartSpan,\n    idleTimeout,\n    finalTimeout,\n    childSpanTimeout,\n    markBackgroundSpan,\n    traceFetch,\n    traceXHR,\n    trackFetchStreamPerformance,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    instrumentPageLoad,\n    instrumentNavigation,\n  } = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = startTrackingWebVitals({ recordClsStandaloneSpans: enableStandaloneClsSpans || false });\n\n  if (enableInp) {\n    startTrackingINP();\n  }\n\n  if (\n    enableLongAnimationFrame &&\n    GLOBAL_OBJ.PerformanceObserver &&\n    PerformanceObserver.supportedEntryTypes &&\n    PerformanceObserver.supportedEntryTypes.includes('long-animation-frame')\n  ) {\n    startTrackingLongAnimationFrames();\n  } else if (enableLongTask) {\n    startTrackingLongTasks();\n  }\n\n  if (enableInteractions) {\n    startTrackingInteractions();\n  }\n\n  const latestRoute: RouteInfo = {\n    name: undefined,\n    source: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteSpan(client: Client, startSpanOptions: StartSpanOptions): Span {\n    const isPageloadTransaction = startSpanOptions.op === 'pageload';\n\n    const finalStartSpanOptions: StartSpanOptions = beforeStartSpan\n      ? beforeStartSpan(startSpanOptions)\n      : startSpanOptions;\n\n    const attributes = finalStartSpanOptions.attributes || {};\n\n    // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n    // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n    if (startSpanOptions.name !== finalStartSpanOptions.name) {\n      attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n      finalStartSpanOptions.attributes = attributes;\n    }\n\n    latestRoute.name = finalStartSpanOptions.name;\n    latestRoute.source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const idleSpan = startIdleSpan(finalStartSpanOptions, {\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      // should wait for finish signal if it's a pageload transaction\n      disableAutoFinish: isPageloadTransaction,\n      beforeSpanEnd: span => {\n        _collectWebVitals();\n        addPerformanceEntries(span, { recordClsOnPageloadSpan: !enableStandaloneClsSpans });\n      },\n    });\n\n    function emitFinish(): void {\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        client.emit('idleSpanEnableAutoFinish', idleSpan);\n      }\n    }\n\n    if (isPageloadTransaction && WINDOW.document) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        emitFinish();\n      });\n\n      emitFinish();\n    }\n\n    return idleSpan;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    afterAllSetup(client) {\n      let activeSpan: Span | undefined;\n      let startingUrl: string | undefined = WINDOW.location && WINDOW.location.href;\n\n      function maybeEndActiveSpan(): void {\n        if (activeSpan && !spanToJSON(activeSpan).timestamp) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current active span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open active span, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n      }\n\n      client.on('startNavigationSpan', startSpanOptions => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        maybeEndActiveSpan();\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'navigation',\n          ...startSpanOptions,\n        });\n      });\n\n      client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n        if (getClient() !== client) {\n          return;\n        }\n        maybeEndActiveSpan();\n\n        const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n        const baggage = traceOptions.baggage || getMetaContent('baggage');\n\n        const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n        getCurrentScope().setPropagationContext(propagationContext);\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'pageload',\n          ...startSpanOptions,\n        });\n      });\n\n      // A trace should to stay the consistent over the entire time span of one route.\n      // Therefore, when the initial pageload or navigation root span ends, we update the\n      // scope's propagation context to keep span-specific attributes like the `sampled` decision and\n      // the dynamic sampling context valid, even after the root span has ended.\n      // This ensures that the trace data is consistent for the entire duration of the route.\n      client.on('spanEnd', span => {\n        const op = spanToJSON(span).op;\n        if (span !== getRootSpan(span) || (op !== 'navigation' && op !== 'pageload')) {\n          return;\n        }\n\n        const scope = getCurrentScope();\n        const oldPropagationContext = scope.getPropagationContext();\n\n        scope.setPropagationContext({\n          ...oldPropagationContext,\n          sampled: oldPropagationContext.sampled !== undefined ? oldPropagationContext.sampled : spanIsSampled(span),\n          dsc: oldPropagationContext.dsc || getDynamicSamplingContextFromSpan(span),\n        });\n      });\n\n      if (WINDOW.location) {\n        if (instrumentPageLoad) {\n          startBrowserTracingPageLoadSpan(client, {\n            name: WINDOW.location.pathname,\n            // pageload should always start at timeOrigin (and needs to be in s, not ms)\n            startTime: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',\n            },\n          });\n        }\n\n        if (instrumentNavigation) {\n          addHistoryInstrumentationHandler(({ to, from }) => {\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n              startingUrl = undefined;\n              return;\n            }\n\n            if (from !== to) {\n              startingUrl = undefined;\n              startBrowserTracingNavigationSpan(client, {\n                name: WINDOW.location.pathname,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser',\n                },\n              });\n            }\n          });\n        }\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (enableInteractions) {\n        registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n      }\n\n      if (enableInp) {\n        registerInpInteractionListener();\n      }\n\n      instrumentOutgoingRequests(client, {\n        traceFetch,\n        traceXHR,\n        trackFetchStreamPerformance,\n        tracePropagationTargets: client.getOptions().tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Manually start a page load span.\n * This will only do something if a browser tracing integration integration has been setup.\n *\n * If you provide a custom `traceOptions` object, it will be used to continue the trace\n * instead of the default behavior, which is to look it up on the <meta> tags.\n */\nexport function startBrowserTracingPageLoadSpan(\n  client: Client,\n  spanOptions: StartSpanOptions,\n  traceOptions?: { sentryTrace?: string | undefined; baggage?: string | undefined },\n): Span | undefined {\n  client.emit('startPageLoadSpan', spanOptions, traceOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if a browser tracing integration has been setup.\n */\nexport function startBrowserTracingNavigationSpan(client: Client, spanOptions: StartSpanOptions): Span | undefined {\n  getIsolationScope().setPropagationContext({ traceId: generateTraceId() });\n  getCurrentScope().setPropagationContext({ traceId: generateTraceId() });\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  idleTimeout: BrowserTracingOptions['idleTimeout'],\n  finalTimeout: BrowserTracingOptions['finalTimeout'],\n  childSpanTimeout: BrowserTracingOptions['childSpanTimeout'],\n  latestRoute: RouteInfo,\n): void {\n  let inflightInteractionSpan: Span | undefined;\n  const registerInteractionTransaction = (): void => {\n    const op = 'ui.action.click';\n\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    if (rootSpan) {\n      const currentRootSpanOp = spanToJSON(rootSpan).op;\n      if (['navigation', 'pageload'].includes(currentRootSpanOp as string)) {\n        DEBUG_BUILD &&\n          logger.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n        return undefined;\n      }\n    }\n\n    if (inflightInteractionSpan) {\n      inflightInteractionSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n      inflightInteractionSpan.end();\n      inflightInteractionSpan = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    inflightInteractionSpan = startIdleSpan(\n      {\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url',\n        },\n      },\n      {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n      },\n    );\n  };\n\n  if (WINDOW.document) {\n    addEventListener('click', registerInteractionTransaction, { once: false, capture: true });\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 879, "column": 0}, "map": {"version":3,"file":"browserapierrors.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/browserapierrors.ts"],"sourcesContent":["import type { IntegrationFn, WrappedFunction } from '@sentry/core';\nimport { defineIntegration, fill, getFunctionName, getOriginalFunction } from '@sentry/core';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface BrowserApiErrorsOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<BrowserApiErrorsOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  return function (this: unknown, ...args: unknown[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\nfunction _wrapRAF(original: () => void): (callback: () => void) => unknown {\n  return function (this: unknown, callback: () => void): () => void {\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  return function (this: XMLHttpRequest, ...args: unknown[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  const globalObject = WINDOW as unknown as Record<string, { prototype?: object }>;\n  const targetObj = globalObject[target];\n  const proto = targetObj && targetObj.prototype;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction): (\n    ...args: Parameters<typeof WINDOW.addEventListener>\n  ) => ReturnType<typeof WINDOW.addEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      try {\n        if (isEventListenerObject(fn)) {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        wrap(fn, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(proto, 'removeEventListener', function (originalRemoveEventListener: VoidFunction): (\n    this: unknown,\n    ...args: Parameters<typeof WINDOW.removeEventListener>\n  ) => ReturnType<typeof WINDOW.removeEventListener> {\n    return function (this: unknown, eventName, fn, options): VoidFunction {\n      /**\n       * There are 2 possible scenarios here:\n       *\n       * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n       * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n       * as a pass-through, and call original `removeEventListener` with it.\n       *\n       * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n       * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n       * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n       * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n       * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n       *\n       * When someone adds a handler prior to initialization, and then do it again, but after,\n       * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n       * to get rid of the initial handler and it'd stick there forever.\n       */\n      try {\n        const originalEventHandler = (fn as WrappedFunction).__sentry_wrapped__;\n        if (originalEventHandler) {\n          originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n        }\n      } catch (e) {\n        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n      }\n      return originalRemoveEventListener.call(this, eventName, fn, options);\n    };\n  });\n}\n\nfunction isEventListenerObject(obj: unknown): obj is EventListenerObject {\n  return typeof (obj as EventListenerObject).handleEvent === 'function';\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1117, "column": 0}, "map": {"version":3,"file":"breadcrumbs.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/breadcrumbs.ts"],"sourcesContent":["/* eslint-disable max-lines */\n\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport type {\n  Breadcrumb,\n  Client,\n  Event as SentryEvent,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  IntegrationFn,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/core';\nimport {\n  addBreadcrumb,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  defineIntegration,\n  getBreadcrumbLogLevelFromHttpStatusCode,\n  getClient,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creates a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    const level = getBreadcrumbLogLevelFromHttpStatusCode(status_code);\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n        level,\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      const level = getBreadcrumbLogLevelFromHttpStatusCode(data.status_code);\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n          level,\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1408, "column": 0}, "map": {"version":3,"file":"eventbuilder.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/eventbuilder.ts"],"sourcesContent":["import type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/core';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  getClient,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/core';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: extractType(ex),\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } as Exception,\n      ],\n    },\n    extra,\n  } satisfies Event;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0]!.stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex: Error): number {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex: Error & { framesToPop?: unknown }): number {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n// https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Exception\n// @ts-expect-error - WebAssembly.Exception is a valid class\nfunction isWebAssemblyException(exception: unknown): exception is WebAssembly.Exception {\n  // Check for support\n  // @ts-expect-error - WebAssembly.Exception is a valid class\n  if (typeof WebAssembly !== 'undefined' && typeof WebAssembly.Exception !== 'undefined') {\n    // @ts-expect-error - WebAssembly.Exception is a valid class\n    return exception instanceof WebAssembly.Exception;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Extracts from errors what we use as the exception `type` in error events.\n *\n * Usually, this is the `name` property on Error objects but WASM errors need to be treated differently.\n */\nexport function extractType(ex: Error & { message: { error?: Error } }): string | undefined {\n  const name = ex && ex.name;\n\n  // The name for WebAssembly.Exception Errors needs to be extracted differently.\n  // Context: https://github.com/getsentry/sentry-javascript/issues/13787\n  if (!name && isWebAssemblyException(ex)) {\n    // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n    const hasTypeInMessage = ex.message && Array.isArray(ex.message) && ex.message.length == 2;\n    return hasTypeInMessage ? ex.message[0] : 'WebAssembly.Exception';\n  }\n\n  return name;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nexport function extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n\n  if (!message) {\n    return 'No error message';\n  }\n\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n\n  // Emscripten sets array[type, message] to the \"message\" property on the WebAssembly.Exception object\n  if (isWebAssemblyException(ex) && Array.isArray(ex.message) && ex.message.length == 2) {\n    return ex.message[1];\n  }\n\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  level: SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n    addExceptionMechanism(event, { synthetic: true });\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AA2BA;;CAEA,GACO,SAAS,kBAAkB,CAAC,WAAW,EAAe,EAAE,EAAoB;IACnF,sFAAA;IACE,MAAM,SAAS,gBAAgB,CAAC,WAAW,EAAE,EAAE,CAAC;IAEhD,MAAM,SAAS,GAAc;QAC3B,IAAI,EAAE,WAAW,CAAC,EAAE,CAAC;QACrB,KAAK,EAAE,cAAc,CAAC,EAAE,CAAC;IAC7B,CAAG;IAED,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,SAAS,CAAC,UAAA,GAAa;YAAE;QAAA,CAAQ;IACrC;IAEE,IAAI,SAAS,CAAC,IAAK,KAAI,SAAU,IAAG,SAAS,CAAC,KAAM,KAAI,EAAE,EAAE;QAC1D,SAAS,CAAC,KAAM,GAAE,4BAA4B;IAClD;IAEE,OAAO,SAAS;AAClB;AAEA,SAAS,oBAAoB,CAC3B,WAAW,EACX,SAAS,EACT,kBAAkB,EAClB,oBAAoB;IAEpB,MAAM,MAAA,4KAAS,YAAA,AAAS,EAAE;IAC1B,MAAM,cAAe,GAAE,MAAO,IAAG,MAAM,CAAC,UAAU,EAAE,CAAC,cAAc;IAErE,gEAAA;IACE,MAAM,aAAc,GAAE,0BAA0B,CAAC,SAAS,CAAC;IAE3D,MAAM,QAAQ;QACZ,cAAc,yLAAE,kBAAA,AAAe,EAAC,SAAS,EAAE,cAAc,CAAC;IAC9D,CAAG;IAED,IAAI,aAAa,EAAE;QACjB,OAAO;YACL,SAAS,EAAE;gBACT,MAAM,EAAE;oBAAC,kBAAkB,CAAC,WAAW,EAAE,aAAa,CAAC;iBAAC;YAChE,CAAO;YACD,KAAK;QACX,CAAK;IACL;IAEE,MAAM,QAAQ;QACZ,SAAS,EAAE;YACT,MAAM,EAAE;gBACN;oBACE,IAAI,kLAAE,UAAA,AAAO,EAAC,SAAS,IAAI,SAAS,CAAC,WAAW,CAAC,IAAK,GAAE,uBAAuB,oBAAA,GAAuB,OAAO;oBAC7G,KAAK,EAAE,+BAA+B,CAAC,SAAS,EAAE;wBAAE,oBAAqB;oBAAA,CAAC,CAAC;gBACrF,CAAU;aACH;QACP,CAAK;QACD,KAAK;IACT,CAAI;IAEF,IAAI,kBAAkB,EAAE;QACtB,MAAM,SAAS,gBAAgB,CAAC,WAAW,EAAE,kBAAkB,CAAC;QAChE,IAAI,MAAM,CAAC,MAAM,EAAE;YACvB,+CAAA;YACA,oEAAA;YACM,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAE,UAAA,GAAa;gBAAE;YAAA,CAAQ;QACxD;IACA;IAEE,OAAO,KAAK;AACd;AAEA,SAAS,cAAc,CAAC,WAAW,EAAe,EAAE,EAAgB;IAClE,OAAO;QACL,SAAS,EAAE;YACT,MAAM,EAAE;gBAAC,kBAAkB,CAAC,WAAW,EAAE,EAAE,CAAC;aAAC;QACnD,CAAK;IACL,CAAG;AACH;AAEA,sCAAA,GACA,SAAS,gBAAgB,CACvB,WAAW,EACX,EAAE;IAEJ,iEAAA;IACA,4DAAA;IACA,mCAAA;IACE,MAAM,UAAW,GAAE,EAAE,CAAC,UAAW,IAAG,EAAE,CAAC,KAAM,IAAG,EAAE;IAElD,MAAM,SAAU,GAAE,4BAA4B,CAAC,EAAE,CAAC;IAClD,MAAM,WAAY,GAAE,oBAAoB,CAAC,EAAE,CAAC;IAE5C,IAAI;QACF,OAAO,WAAW,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC;IAC1D,CAAI,CAAA,OAAO,CAAC,EAAE;IACd,WAAA;IACA;IAEE,OAAO,EAAE;AACX;AAEA,2KAAA;AACA,MAAM,mBAAA,GAAsB,6BAA6B;AAEzD;;;;CAIA,GACA,SAAS,4BAA4B,CAAC,EAAE,EAAiB;IACvD,IAAI,EAAG,IAAG,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;QAC9C,OAAO,CAAC;IACZ;IAEE,OAAO,CAAC;AACV;AAEA;;;;;;;CAOA,GACA,SAAS,oBAAoB,CAAC,EAAE,EAA6C;IAC3E,IAAI,OAAO,EAAE,CAAC,WAAY,KAAI,QAAQ,EAAE;QACtC,OAAO,EAAE,CAAC,WAAW;IACzB;IAEE,OAAO,CAAC;AACV;AAEA,sFAAA;AACA,4DAAA;AACA,SAAS,sBAAsB,CAAC,SAAS,EAA+C;IACxF,oBAAA;IACA,4DAAA;IACE,IAAI,OAAO,WAAA,KAAgB,WAAA,IAAe,OAAO,WAAW,CAAC,SAAU,KAAI,WAAW,EAAE;QAC1F,4DAAA;QACI,OAAO,SAAA,YAAqB,WAAW,CAAC,SAAS;IACrD,OAAS;QACL,OAAO,KAAK;IAChB;AACA;AAEA;;;;CAIA,GACO,SAAS,WAAW,CAAC,EAAE,EAA8D;IAC1F,MAAM,IAAK,GAAE,MAAM,EAAE,CAAC,IAAI;IAE5B,+EAAA;IACA,uEAAA;IACE,IAAI,CAAC,IAAA,IAAQ,sBAAsB,CAAC,EAAE,CAAC,EAAE;QAC3C,qGAAA;QACI,MAAM,mBAAmB,EAAE,CAAC,OAAQ,IAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,KAAK,EAAE,CAAC,OAAO,CAAC,MAAO,IAAG,CAAC;QAC1F,OAAO,gBAAiB,GAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAE,GAAE,uBAAuB;IACrE;IAEE,OAAO,IAAI;AACb;AAEA;;;;CAIA,GACO,SAAS,cAAc,CAAC,EAAE,EAAkD;IACjF,MAAM,OAAQ,GAAE,MAAM,EAAE,CAAC,OAAO;IAEhC,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,kBAAkB;IAC7B;IAEE,IAAI,OAAO,CAAC,KAAA,IAAS,OAAO,OAAO,CAAC,KAAK,CAAC,OAAQ,KAAI,QAAQ,EAAE;QAC9D,OAAO,OAAO,CAAC,KAAK,CAAC,OAAO;IAChC;IAEA,qGAAA;IACE,IAAI,sBAAsB,CAAC,EAAE,CAAE,IAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAE,IAAG,EAAE,CAAC,OAAO,CAAC,MAAA,IAAU,CAAC,EAAE;QACrF,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IACxB;IAEE,OAAO,OAAO;AAChB;AAEA;;;CAGA,GACO,SAAS,kBAAkB,CAChC,WAAW,EACX,SAAS,EACT,IAAI,EACJ,gBAAgB;IAEhB,MAAM,kBAAmB,GAAE,AAAC,IAAA,IAAQ,IAAI,CAAC,kBAAkB,IAAK,SAAS;IACzE,MAAM,KAAA,GAAQ,qBAAqB,CAAC,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE,gBAAgB,CAAC;sLACjG,wBAAA,AAAqB,EAAC,KAAK,CAAC,CAAA,CAAA,iDAAA;IAC5B,KAAK,CAAC,KAAM,GAAE,OAAO;IACrB,IAAI,IAAA,IAAQ,IAAI,CAAC,QAAQ,EAAE;QACzB,KAAK,CAAC,QAAA,GAAW,IAAI,CAAC,QAAQ;IAClC;IACE,gMAAO,sBAAA,AAAmB,EAAC,KAAK,CAAC;AACnC;AAEA;;;CAGA,GACO,SAAS,gBAAgB,CAC9B,WAAW,EACX,OAAO,EACP,KAAK,GAAkB,MAAM,EAC7B,IAAI,EACJ,gBAAgB;IAEhB,MAAM,kBAAmB,GAAE,AAAC,IAAA,IAAQ,IAAI,CAAC,kBAAkB,IAAK,SAAS;IACzE,MAAM,KAAA,GAAQ,eAAe,CAAC,WAAW,EAAE,OAAO,EAAE,kBAAkB,EAAE,gBAAgB,CAAC;IACzF,KAAK,CAAC,KAAM,GAAE,KAAK;IACnB,IAAI,IAAA,IAAQ,IAAI,CAAC,QAAQ,EAAE;QACzB,KAAK,CAAC,QAAA,GAAW,IAAI,CAAC,QAAQ;IAClC;IACE,QAAO,8MAAA,AAAmB,EAAC,KAAK,CAAC;AACnC;AAEA;;CAEA,GACO,SAAS,qBAAqB,CACnC,WAAW,EACX,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EAChB,oBAAoB;IAEpB,IAAI,KAAK;IAET,KAAI,8LAAA,AAAY,EAAC,SAAU,EAAA,GAAkB,AAAC,SAAU,CAAe,KAAK,EAAE;QAChF,+EAAA;QACI,MAAM,UAAW,GAAE,SAAU;QAC7B,OAAO,cAAc,CAAC,WAAW,EAAE,UAAU,CAAC,KAAA,EAAe;IACjE;IAEA,oHAAA;IACA,8GAAA;IACA,yGAAA;IACA,EAAA;IACA,4DAAA;IACA,gEAAA;IACA,8DAAA;IACE,oLAAI,aAAA,AAAU,EAAC,SAAS,CAAE,oLAAG,iBAAA,AAAc,EAAC,SAAU,EAAgB,CAAE;QACtE,MAAM,YAAa,GAAE,SAAU;QAE/B,IAAI,OAAA,IAAY,SAAA,EAAmB,AAAE;YACnC,QAAQ,cAAc,CAAC,WAAW,EAAE,WAAmB;QAC7D,OAAW;YACL,MAAM,IAAK,GAAE,YAAY,CAAC,IAAA,IAAA,gLAAS,cAAA,AAAU,EAAC,YAAY,CAAE,GAAE,UAAW,GAAE,cAAc,CAAC;YAC1F,MAAM,UAAU,YAAY,CAAC,OAAQ,GAAE,CAAC,EAAA,IAAA,CAAA,EAAA,EAAA,YAAA,CAAA,OAAA,CAAA,CAAA,GAAA,IAAA;YACA,KAAA,GAAA,eAAA,CAAA,WAAA,EAAA,OAAA,EAAA,kBAAA,EAAA,gBAAA,CAAA;8LACA,wBAAA,EAAA,KAAA,EAAA,OAAA,CAAA;QACA;QACA,IAAA,MAAA,IAAA,YAAA,EAAA;YACA,mDAAA;YACA,KAAA,CAAA,IAAA,GAAA;gBAAA,GAAA,KAAA,CAAA,IAAA;gBAAA,mBAAA,EAAA,CAAA,EAAA,YAAA,CAAA,IAAA,CAAA,CAAA;YAAA,CAAA;QACA;QAEA,OAAA,KAAA;IACA;IACA,oLAAA,UAAA,EAAA,SAAA,CAAA,EAAA;QACA,0CAAA;QACA,OAAA,cAAA,CAAA,WAAA,EAAA,SAAA,CAAA;IACA;IACA,oLAAA,gBAAA,EAAA,SAAA,CAAA,oLAAA,UAAA,EAAA,SAAA,CAAA,EAAA;QACA,kHAAA;QACA,mHAAA;QACA,iCAAA;QACA,MAAA,eAAA,GAAA,SAAA;QACA,KAAA,GAAA,oBAAA,CAAA,WAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA;0LACA,wBAAA,EAAA,KAAA,EAAA;YACA,SAAA,EAAA,IAAA;QACA,CAAA,CAAA;QACA,OAAA,KAAA;IACA;IAEA,sEAAA;IACA,4BAAA;IACA,gCAAA;IACA,yBAAA;IACA,yBAAA;IACA,oDAAA;IACA,mBAAA;IACA,EAAA;IACA,kDAAA;IACA,KAAA,GAAA,eAAA,CAAA,WAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,gBAAA,CAAA;sLACA,wBAAA,EAAA,KAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,SAAA,CAAA;IACA,0MAAA,EAAA,KAAA,EAAA;QACA,SAAA,EAAA,IAAA;IACA,CAAA,CAAA;IAEA,OAAA,KAAA;AACA;AAEA,SAAA,eAAA,CACA,WAAA,EACA,OAAA,EACA,kBAAA,EACA,gBAAA;IAEA,MAAA,KAAA,GAAA,CAAA,CAAA;IAEA,IAAA,gBAAA,IAAA,kBAAA,EAAA;QACA,MAAA,MAAA,GAAA,gBAAA,CAAA,WAAA,EAAA,kBAAA,CAAA;QACA,IAAA,MAAA,CAAA,MAAA,EAAA;YACA,KAAA,CAAA,SAAA,GAAA;gBACA,MAAA,EAAA;oBAAA;wBAAA,KAAA,EAAA,OAAA;wBAAA,UAAA,EAAA;4BAAA,MAAA;wBAAA,CAAA;oBAAA,CAAA;iBAAA;YACA,CAAA;QACA;0LACA,wBAAA,EAAA,KAAA,EAAA;YAAA,SAAA,EAAA,IAAA;QAAA,CAAA,CAAA;IACA;IAEA,oLAAA,wBAAA,EAAA,OAAA,CAAA,EAAA;QACA,MAAA,EAAA,0BAAA,EAAA,0BAAA,EAAA,GAAA,OAAA;QAEA,KAAA,CAAA,QAAA,GAAA;YACA,OAAA,EAAA,0BAAA;YACA,MAAA,EAAA,0BAAA;QACA,CAAA;QACA,OAAA,KAAA;IACA;IAEA,KAAA,CAAA,OAAA,GAAA,OAAA;IACA,OAAA,KAAA;AACA;AAEA,SAAA,+BAAA,CACA,SAAA,EACA,EAAA,oBAAA,EAAA;IAEA,MAAA,IAAA,GAAA,qNAAA,EAAA,SAAA,CAAA;IACA,MAAA,WAAA,GAAA,oBAAA,GAAA,mBAAA,GAAA,WAAA;IAEA,sGAAA;IACA,+DAAA;IACA,oLAAA,eAAA,EAAA,SAAA,CAAA,EAAA;QACA,OAAA,CAAA,iCAAA,EAAA,WAAA,CAAA,gBAAA,EAAA,SAAA,CAAA,OAAA,CAAA,EAAA,CAAA;IACA;IAEA,oLAAA,UAAA,EAAA,SAAA,CAAA,EAAA;QACA,MAAA,SAAA,GAAA,kBAAA,CAAA,SAAA,CAAA;QACA,OAAA,CAAA,QAAA,EAAA,SAAA,CAAA,SAAA,EAAA,SAAA,CAAA,IAAA,CAAA,cAAA,EAAA,WAAA,CAAA,CAAA;IACA;IAEA,OAAA,CAAA,mBAAA,EAAA,WAAA,CAAA,YAAA,EAAA,IAAA,CAAA,CAAA;AACA;AAEA,SAAA,kBAAA,CAAA,GAAA,EAAA;IACA,IAAA;QACA,MAAA,SAAA,GAAA,MAAA,CAAA,cAAA,CAAA,GAAA,CAAA;QACA,OAAA,SAAA,GAAA,SAAA,CAAA,WAAA,CAAA,IAAA,GAAA,SAAA;IACA,CAAA,CAAA,OAAA,CAAA,EAAA;IACA,qBAAA;IACA;AACA;AAEA,4EAAA,GACA,SAAA,0BAAA,CAAA,GAAA,EAAA;IACA,IAAA,MAAA,IAAA,IAAA,GAAA,CAAA;QACA,IAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,EAAA;YACA,MAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA;YACA,IAAA,KAAA,YAAA,KAAA,EAAA;gBACA,OAAA,KAAA;YACA;QACA;IACA;IAEA,OAAA,SAAA;AACA","ignoreList":[0]}},
    {"offset": {"line": 1735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1741, "column": 0}, "map": {"version":3,"file":"globalhandlers.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/globalhandlers.ts"],"sourcesContent":["import type { Client, Event, IntegrationFn, Primitive, StackParser } from '@sentry/core';\nimport {\n  UNKNOWN_FUNCTION,\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  captureEvent,\n  defineIntegration,\n  getClient,\n  getLocationHref,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/core';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n    type ErrorWithReason = { reason: unknown };\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error as ErrorWithReason)) {\n      return (error as ErrorWithReason).reason;\n    }\n\n    type CustomEventWithDetail = { detail: { reason: unknown } };\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error as CustomEventWithDetail) && 'reason' in (error as CustomEventWithDetail).detail) {\n      return (error as CustomEventWithDetail).detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\nfunction _enhanceEventWithInitialFrame(\n  event: Event,\n  url: string | undefined,\n  line: number | undefined,\n  column: number | undefined,\n): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = column;\n  const lineno = line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"file":"linkederrors.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/linkederrors.ts"],"sourcesContent":["import type { IntegrationFn } from '@sentry/core';\nimport { applyAggregateErrorsToEvent, defineIntegration } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Aggregrate linked errors in an event.\n */\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n"],"names":[],"mappings":";;;;;;;;AASA,MAAM,WAAA,GAAc,OAAO;AAC3B,MAAM,aAAA,GAAgB,CAAC;AAEvB,MAAM,gBAAA,GAAmB,cAAc;AAEvC,MAAM,wBAAA,GAA4B,CAAC,OAAO,GAAwB,CAAA,CAAE,KAAK;IACvE,MAAM,KAAM,GAAE,OAAO,CAAC,KAAA,IAAS,aAAa;IAC5C,MAAM,GAAI,GAAE,OAAO,CAAC,GAAA,IAAO,WAAW;IAEtC,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,eAAe,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;YACnC,MAAM,OAAQ,GAAE,MAAM,CAAC,UAAU,EAAE;6MAEnC,8BAAA,AAA2B,EACjC,0GAAA;0LACQ,qBAAkB,EAClB,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,cAAc,EACtB,GAAG,EACH,KAAK,EACL,KAAK,EACL,IAAI;QAEZ,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH;;CAEA,SACa,uBAAwB,0KAAE,oBAAA,AAAiB,EAAC,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 1934, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1940, "column": 0}, "map": {"version":3,"file":"httpcontext.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/httpcontext.ts"],"sourcesContent":["import { defineIntegration } from '@sentry/core';\nimport { WINDOW } from '../helpers';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nexport const httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n});\n"],"names":[],"mappings":";;;;;;;AAGA;;;CAGA,SACa,sBAAuB,0KAAE,oBAAA,AAAiB,EAAC,MAAM;IAC5D,OAAO;QACL,IAAI,EAAE,aAAa;QACnB,eAAe,EAAC,KAAK,EAAE;YAC3B,0DAAA;YACM,IAAI,0KAAC,SAAM,CAAC,SAAA,IAAa,0KAAC,SAAM,CAAC,QAAA,IAAY,0KAAC,SAAM,CAAC,QAAQ,EAAE;gBAC7D;YACR;YAEA,sDAAA;YACM,MAAM,GAAI,GAAE,AAAC,KAAK,CAAC,OAAQ,IAAG,KAAK,CAAC,OAAO,CAAC,GAAG,4KAAM,UAAM,CAAC,QAAA,6KAAY,SAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC7F,MAAM,EAAE,QAAA,EAAW,4KAAE,SAAM,CAAC,QAAA,IAAY,CAAA,CAAE;YAC1C,MAAM,EAAE,SAAA,EAAY,4KAAE,SAAM,CAAC,SAAA,IAAa,CAAA,CAAE;YAE5C,MAAM,UAAU;gBACd,GAAI,KAAK,CAAC,OAAA,IAAW,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC3C,GAAI,QAAS,IAAG;oBAAE,OAAO,EAAE,QAAS;gBAAA,CAAC,CAAC;gBACtC,GAAI,SAAU,IAAG;oBAAE,YAAY,EAAE,SAAU;gBAAA,CAAC,CAAC;YACrD,CAAO;YACD,MAAM,OAAQ,GAAE;gBAAE,GAAG,KAAK,CAAC,OAAO;gBAAE,GAAI,GAAA,IAAO;oBAAE,GAAA;gBAAA,CAAK,CAAC;gBAAE;YAAA,CAAS;YAElE,KAAK,CAAC,OAAQ,GAAE,OAAO;QAC7B,CAAK;IACL,CAAG;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1990, "column": 0}, "map": {"version":3,"file":"browsersession.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/browsersession.ts"],"sourcesContent":["import { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { captureSession, defineIntegration, logger, startSession } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\n/**\n * When added, automatically creates sessions which allow you to track adoption and crashes (crash free rate) in your Releases in Sentry.\n * More information: https://docs.sentry.io/product/releases/health/\n *\n * Note: In order for session tracking to work, you need to set up Releases: https://docs.sentry.io/product/releases/\n */\nexport const browserSessionIntegration = defineIntegration(() => {\n  return {\n    name: 'BrowserSession',\n    setupOnce() {\n      if (typeof WINDOW.document === 'undefined') {\n        DEBUG_BUILD &&\n          logger.warn('Using the `browserSessionIntegration` in non-browser environments is not supported.');\n        return;\n      }\n\n      // The session duration for browser sessions does not track a meaningful\n      // concept that can be used as a metric.\n      // Automatically captured sessions are akin to page views, and thus we\n      // discard their duration.\n      startSession({ ignoreDuration: true });\n      captureSession();\n\n      // We want to create a session for every navigation as well\n      addHistoryInstrumentationHandler(({ from, to }) => {\n        // Don't create an additional session for the initial route or if the location did not change\n        if (from !== undefined && from !== to) {\n          startSession({ ignoreDuration: true });\n          captureSession();\n        }\n      });\n    },\n  };\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;AAKA;;;;;CAKA,SACa,yBAA0B,0KAAE,oBAAA,AAAiB,EAAC,MAAM;IAC/D,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,SAAS,GAAG;YACV,IAAI,gLAAO,SAAM,CAAC,QAAS,KAAI,WAAW,EAAE;gMAC1C,cAAY,mLACV,UAAM,CAAC,IAAI,CAAC,qFAAqF,CAAC;gBACpG;YACR;YAEA,wEAAA;YACA,wCAAA;YACA,sEAAA;YACA,0BAAA;+KACM,eAAA,AAAY,EAAC;gBAAE,cAAc,EAAE,IAAA;YAAA,CAAM,CAAC;YACtC,oLAAA,AAAc,EAAE;YAEtB,2DAAA;qNACM,mCAAA,AAAgC,EAAC,CAAC,EAAE,IAAI,EAAE,EAAA,EAAI,KAAK;gBACzD,6FAAA;gBACQ,IAAI,IAAK,KAAI,aAAa,IAAA,KAAS,EAAE,EAAE;uLACrC,eAAA,AAAY,EAAC;wBAAE,cAAc,EAAE,IAAA;oBAAA,CAAM,CAAC;uLACtC,iBAAA,AAAc,EAAE;gBAC1B;YACA,CAAO,CAAC;QACR,CAAK;IACL,CAAG;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2039, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2045, "column": 0}, "map": {"version":3,"file":"stack-parsers.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/stack-parsers.ts"],"sourcesContent":["// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport { UNKNOWN_FUNCTION, createStackParser } from '@sentry/core';\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/core';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) as null | [string, string, string, string];\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) as null | [string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) as null | [string, string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line) as null | [string, string, string, string, string, string];\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) as null | [string, string, string];\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line) as null | [string, string, string, string, string];\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line) as null | [string, string, string, string];\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line) as null | [string, string, string, string, string, string];\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] as string) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,uFAAA;AACA,sCAAA;AACA,EAAA;AACA,oFAAA;AACA,6BAAA;AAwBA,MAAM,gBAAA,GAAmB,EAAE;AAC3B,MAAM,gBAAA,GAAmB,EAAE;AAC3B,MAAM,eAAA,GAAkB,EAAE;AAC1B,MAAM,cAAA,GAAiB,EAAE;AACzB,MAAM,cAAA,GAAiB,EAAE;AAEzB,SAAS,WAAW,CAAC,QAAQ,EAAU,IAAI,EAAU,MAAM,EAAW,KAAK,EAAuB;IAChG,MAAM,KAAK,GAAe;QACxB,QAAQ;QACR,QAAQ,EAAE,IAAK,KAAI,oMAAgB,mBAAA,GAAmB,IAAI;QAC1D,MAAM,EAAE,IAAI;IAChB,CAAG;IAED,IAAI,MAAO,KAAI,SAAS,EAAE;QACxB,KAAK,CAAC,MAAO,GAAE,MAAM;IACzB;IAEE,IAAI,KAAM,KAAI,SAAS,EAAE;QACvB,KAAK,CAAC,KAAM,GAAE,KAAK;IACvB;IAEE,OAAO,KAAK;AACd;AAEA,+FAAA;AACA,0DAAA;AACA,oHAAA;AACA,MAAM,mBAAA,GAAsB,wCAAwC;AAEpE,+DAAA;AACA,MAAM,WAAY,GAChB,4IAA4I;AAE9I,MAAM,eAAA,GAAkB,+BAA+B;AAEvD,8DAAA;AACA,sHAAA;AACA,kEAAA;AACA,MAAM,mBAAmB,IAAsB,IAAA,IAAQ;IACvD,0EAAA;IACE,MAAM,YAAY,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAE;IAEjD,IAAI,SAAS,EAAE;QACb,MAAM,GAAG,QAAQ,EAAE,IAAI,EAAE,GAAG,CAAE,GAAE,SAAS;QACzC,OAAO,WAAW,CAAC,QAAQ,sLAAE,mBAAgB,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;IAC/D;IAEE,MAAM,QAAQ,WAAW,CAAC,IAAI,CAAC,IAAI,CAAE;IAErC,IAAI,KAAK,EAAE;QACT,MAAM,MAAO,GAAE,KAAK,CAAC,CAAC,CAAA,IAAK,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAA,KAAM,CAAC,CAAA,CAAA,gBAAA;QAEzD,IAAI,MAAM,EAAE;YACV,MAAM,QAAS,GAAE,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE;YAEhD,IAAI,QAAQ,EAAE;gBACpB,iEAAA;gBACQ,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,MAAA;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,OAAA;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,SAAA;YAC9B;QACA;QAEA,kHAAA;QACA,oFAAA;QACI,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAE,GAAE,6BAA6B,CAAC,KAAK,CAAC,CAAC,CAAA,wLAAK,mBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAE9F,OAAO,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAA,GAAI,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAE,GAAE,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,CAAC;IAC1G;IAEE;AACF,CAAC;AAEM,MAAM,qBAAqB,GAAoB;IAAC,eAAe;IAAE,mBAAmB;CAAA;AAE3F,8HAAA;AACA,qGAAA;AACA,8EAAA;AACA,MAAM,UAAW,GACf,sIAAsI;AACxI,MAAM,cAAA,GAAiB,+CAA+C;AAEtE,MAAM,KAAK,IAAsB,IAAA,IAAQ;IACvC,MAAM,QAAQ,UAAU,CAAC,IAAI,CAAC,IAAI,CAAE;IAEpC,IAAI,KAAK,EAAE;QACT,MAAM,MAAO,GAAE,KAAK,CAAC,CAAC,CAAA,IAAK,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAE,GAAE,CAAC,CAAC;QAC3D,IAAI,MAAM,EAAE;YACV,MAAM,QAAS,GAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE;YAE/C,IAAI,QAAQ,EAAE;gBACpB,0DAAA;gBACQ,KAAK,CAAC,CAAC,CAAE,GAAE,KAAK,CAAC,CAAC,CAAE,IAAG,MAAM;gBAC7B,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC,CAAC,CAAA,GAAI,EAAE,CAAA,CAAA,sBAAA;YACrB;QACA;QAEI,IAAI,QAAS,GAAE,KAAK,CAAC,CAAC,CAAC;QACvB,IAAI,OAAO,KAAK,CAAC,CAAC,CAAA,wLAAK,mBAAgB;QACvC,CAAC,IAAI,EAAE,QAAQ,CAAA,GAAI,6BAA6B,CAAC,IAAI,EAAE,QAAQ,CAAC;QAEhE,OAAO,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAA,GAAI,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAE,GAAE,CAAC,KAAK,CAAC,CAAC,CAAE,GAAE,SAAS,CAAC;IAC1G;IAEE;AACF,CAAC;AAEM,MAAM,oBAAoB,GAAoB;IAAC,cAAc;IAAE,KAAK;CAAA;AAE3E,MAAM,UAAA,GAAa,sFAAsF;AAEzG,MAAM,KAAK,IAAsB,IAAA,IAAQ;IACvC,MAAM,QAAQ,UAAU,CAAC,IAAI,CAAC,IAAI,CAAE;IAEpC,OAAO,QACH,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,wLAAG,mBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA,GAAI,CAAC,KAAK,CAAC,CAAC,CAAA,GAAI,SAAS,IAC/F,SAAS;AACf,CAAC;AAEM,MAAM,oBAAoB,GAAoB;IAAC,cAAc;IAAE,KAAK;CAAA;AAE3E,MAAM,YAAA,GAAe,6DAA6D;AAElF,MAAM,OAAO,IAAsB,IAAA,IAAQ;IACzC,MAAM,QAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE;IACtC,OAAO,KAAM,GAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,wLAAG,mBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,GAAE,SAAS;AAC3F,CAAC;AAEM,MAAM,sBAAsB,GAAoB;IAAC,gBAAgB;IAAE,OAAO;CAAA;AAEjF,MAAM,YAAa,GACjB,mGAAmG;AAErG,MAAM,OAAO,IAAsB,IAAA,IAAQ;IACzC,MAAM,QAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,CAAE;IACtC,OAAO,KAAA,GAAQ,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA,IAAK,KAAK,CAAC,CAAC,CAAA,uLAAK,oBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,GAAI,SAAS;AAClH,CAAC;AAEM,MAAM,sBAAsB,GAAoB;IAAC,gBAAgB;IAAE,OAAO;CAAA;MAEpE,uBAAwB,GAAE;IAAC,qBAAqB;IAAE,oBAAoB;CAAA;MAEtE,kBAAmB,2LAAE,oBAAA,AAAiB,CAAC,IAAG,uBAAuB;AAE9E;;;;;;;;;;;;;;;;;;;CAmBA,GACA,MAAM,gCAAgC,CAAC,IAAI,EAAU,QAAQ,KAA+B;IAC1F,MAAM,iBAAkB,GAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAA,KAAM,CAAC,CAAC;IACjE,MAAM,oBAAqB,GAAE,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAA,KAAM,CAAC,CAAC;IAExE,OAAO,qBAAqB,uBACxB;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,CAAA,GAAK,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,uLAAe,mBAAgB;QAC5E,oBAAoB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAA,GAAA,CAAA,qBAAA,EAAA,QAAA,CAAA,CAAA;KACA,GACA;QAAA,IAAA;QAAA,QAAA;KAAA;AACA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2220, "column": 0}, "map": {"version":3,"file":"fetch.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/transports/fetch.ts"],"sourcesContent":["import { clearCachedImplementation, getNativeImplementation } from '@sentry-internal/browser-utils';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/core';\nimport { createTransport, rejectedSyncPromise } from '@sentry/core';\nimport type { WINDOW } from '../helpers';\nimport type { BrowserTransportOptions } from './types';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: typeof WINDOW.fetch | undefined = getNativeImplementation('fetch'),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. when finishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      // TODO: This may need a `suppressTracing` call in the future when we switch the browser SDK to OTEL\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n"],"names":[],"mappings":";;;;;;;;AAMA;;CAEA,GACO,SAAS,kBAAkB,CAChC,OAAO,EACP,WAAW,8MAAoC,0BAAA,AAAuB,EAAC,OAAO,CAAC;IAE/E,IAAI,eAAgB,GAAE,CAAC;IACvB,IAAI,YAAa,GAAE,CAAC;IAEpB,SAAS,WAAW,CAAC,OAAO,EAA+D;QACzF,MAAM,WAAY,GAAE,OAAO,CAAC,IAAI,CAAC,MAAM;QACvC,eAAA,IAAmB,WAAW;QAC9B,YAAY,EAAE;QAEd,MAAM,cAAc,GAAgB;YAClC,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,MAAM,EAAE,MAAM;YACd,cAAc,EAAE,QAAQ;YACxB,OAAO,EAAE,OAAO,CAAC,OAAO;YAC9B,+GAAA;YACA,iHAAA;YACA,0GAAA;YACA,mHAAA;YACA,WAAA;YACA,2CAAA;YACA,8EAAA;YACA,sHAAA;YACA,0EAAA;YACA,mGAAA;YACA,2EAAA;YACM,SAAS,EAAE,eAAgB,IAAG,SAAU,YAAA,GAAe,EAAE;YACzD,GAAG,OAAO,CAAC,YAAY;QAC7B,CAAK;QAED,IAAI,CAAC,WAAW,EAAE;uNAChB,4BAAA,AAAyB,EAAC,OAAO,CAAC;YAClC,OAAO,+MAAA,AAAmB,EAAC,mCAAmC,CAAC;QACrE;QAEI,IAAI;YACR,oGAAA;YACM,OAAO,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC,IAAI,EAAC,YAAY;gBAC/D,eAAA,IAAmB,WAAW;gBAC9B,YAAY,EAAE;gBACd,OAAO;oBACL,UAAU,EAAE,QAAQ,CAAC,MAAM;oBAC3B,OAAO,EAAE;wBACP,sBAAsB,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;wBACpE,aAAa,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;oBAC9D,CAAW;gBACX,CAAS;YACT,CAAO,CAAC;QACR,CAAM,CAAA,OAAO,CAAC,EAAE;uNACV,4BAAA,AAAyB,EAAC,OAAO,CAAC;YAClC,eAAA,IAAmB,WAAW;YAC9B,YAAY,EAAE;YACd,gMAAO,sBAAA,AAAmB,EAAC,CAAC,CAAC;QACnC;IACA;IAEE,qLAAO,kBAAA,AAAe,EAAC,OAAO,EAAE,WAAW,CAAC;AAC9C","ignoreList":[0]}},
    {"offset": {"line": 2284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2290, "column": 0}, "map": {"version":3,"file":"userfeedback.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/userfeedback.ts"],"sourcesContent":["import { createEnvelope, dsnToString } from '@sentry/core';\nimport type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/core';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n"],"names":[],"mappings":";;;;;;AAGA;;CAEA,GACO,SAAS,0BAA0B,CACxC,QAAQ,EACR,EACE,QAAQ,EACR,MAAM,EACN,GAAG,EACP;IAME,MAAM,OAAO,GAAqB;QAChC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;QAC3B,OAAO,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACjC,GAAI,QAAS,IACX,QAAQ,CAAC,GAAA,IAAO;YACd,GAAG,EAAE;gBACH,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI;gBACvB,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,OAAO;YACvC,CAAS;QACT,CAAO,CAAC;QACJ,GAAI,CAAC,CAAC,MAAO,IAAG,CAAC,CAAC,GAAA,IAAO;YAAE,GAAG,mLAAE,cAAA,AAAW,EAAC,GAAG,CAAA;QAAA,CAAG,CAAC;IACvD,CAAG;IACD,MAAM,IAAK,GAAE,8BAA8B,CAAC,QAAQ,CAAC;IAErD,6LAAO,iBAAA,AAAc,EAAC,OAAO,EAAE;QAAC,IAAI;KAAC,CAAC;AACxC;AAEA,SAAS,8BAA8B,CAAC,QAAQ,EAAkC;IAChF,MAAM,eAAe,GAAwB;QAC3C,IAAI,EAAE,aAAa;IACvB,CAAG;IACD,OAAO;QAAC,eAAe;QAAE,QAAQ;KAAC;AACpC","ignoreList":[0]}},
    {"offset": {"line": 2328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2334, "column": 0}, "map": {"version":3,"file":"client.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/client.ts"],"sourcesContent":["import type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Scope,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/core';\nimport { BaseClient, applySdkMetadata, getSDKSource, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /**\n     * Important: Only set this option if you know what you are doing!\n     *\n     * By default, the SDK will check if `Sentry.init` is called in a browser extension.\n     * In case it is, it will stop initialization and log a warning\n     * because browser extensions require a different Sentry initialization process:\n     * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n     *\n     * Setting up the SDK in a browser extension with global error monitoring is not recommended\n     * and will likely flood you with errors from other web sites or extensions. This can heavily\n     * impact your quota and cause interference with your and other Sentry SDKs in shared environments.\n     *\n     * If this check wrongfully flags your setup as a browser extension, you can set this\n     * option to `true` to skip the check.\n     *\n     * @default false\n     */\n    skipBrowserExtensionCheck?: boolean;\n  };\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   *\n   * @deprecated Use `captureFeedback` instead.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAmBA;;;CAGA,GAmCA;;;;;CAKA,GACO,MAAM,aAAA,2KAAsB,aAAU,CAAuB;IACpE;;;;GAIA,GACS,WAAW,CAAC,OAAO,CAAwB;QAChD,MAAM,OAAO;YACjB,uDAAA;YACM,0BAA0B,EAAE,IAAI;YAChC,GAAG,OAAO;QAChB,CAAK;QACD,MAAM,qLAAY,SAAM,CAAC,iBAAkB,QAAG,4LAAA,AAAY,EAAE;wLAC5D,mBAAA,AAAgB,EAAC,IAAI,EAAE,SAAS,EAAE;YAAC,SAAS;SAAC,EAAE,SAAS,CAAC;QAEzD,KAAK,CAAC,IAAI,CAAC;QAEX,IAAI,IAAI,CAAC,iBAAA,6KAAqB,SAAM,CAAC,QAAQ,EAAE;qLAC7C,SAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;gBACzD,6KAAI,SAAM,CAAC,QAAQ,CAAC,eAAA,KAAoB,QAAQ,EAAE;oBAChD,IAAI,CAAC,cAAc,EAAE;gBAC/B;YACA,CAAO,CAAC;QACR;IACA;IAEA;;GAEA,GACS,kBAAkB,CAAC,SAAS,EAAW,IAAI,EAAkC;QAClF,QAAO,sMAAA,AAAkB,EAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IACzG;IAEA;;GAEA,GACS,gBAAgB,CACrB,OAAO,EACP,KAAK,GAAkB,MAAM,EAC7B,IAAI,EACgB;QACpB,OAAO,qMAAA,AAAgB,EAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC5G;IAEA;;;;GAIA,GACS,mBAAmB,CAAC,QAAQ,EAAsB;QACvD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;4LACtB,cAAA,oLAAe,SAAM,CAAC,IAAI,CAAC,kDAAkD,CAAC;YAC9E;QACN;QAEI,MAAM,QAAS,qLAAE,6BAAA,AAA0B,EAAC,QAAQ,EAAE;YACpD,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE;YAC/B,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE;YAClB,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM;QACtC,CAAK,CAAC;QAEN,gCAAA;QACA,mEAAA;QACI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA;;GAEA,GACY,aAAa,CAAC,KAAK,EAAS,IAAI,EAAa,KAAK,EAAqC;QAC/F,KAAK,CAAC,QAAS,GAAE,KAAK,CAAC,QAAA,IAAY,YAAY;QAC/C,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;IAClD;AACA","ignoreList":[0]}},
    {"offset": {"line": 2419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2425, "column": 0}, "map": {"version":3,"file":"sdk.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/sdk.ts"],"sourcesContent":["import {\n  consoleSandbox,\n  dedupeIntegration,\n  functionToStringIntegration,\n  getClient,\n  getCurrentScope,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  inboundFiltersIntegration,\n  initAndBind,\n  lastEventId,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/core';\nimport type { Client, DsnLike, Integration, Options, UserFeedback } from '@sentry/core';\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport { WINDOW } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors';\nimport { browserSessionIntegration } from './integrations/browsersession';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport } from './transports/fetch';\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(options: Options): Integration[] {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  const integrations = [\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n  ];\n\n  // eslint-disable-next-line deprecation/deprecation\n  if (options.autoSessionTracking !== false) {\n    integrations.push(browserSessionIntegration());\n  }\n\n  return integrations;\n}\n\nfunction applyDefaultOptions(optionsArg: BrowserOptions = {}): BrowserOptions {\n  const defaultOptions: BrowserOptions = {\n    defaultIntegrations: getDefaultIntegrations(optionsArg),\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id // This supports the variable that sentry-webpack-plugin injects\n          ? WINDOW.SENTRY_RELEASE.id\n          : undefined,\n    autoSessionTracking: true,\n    sendClientReports: true,\n  };\n\n  // TODO: Instead of dropping just `defaultIntegrations`, we should simply\n  // call `dropUndefinedKeys` on the entire `optionsArg`.\n  // However, for this to work we need to adjust the `hasTracingEnabled()` logic\n  // first as it differentiates between `undefined` and the key not being in the object.\n  if (optionsArg.defaultIntegrations == null) {\n    delete optionsArg.defaultIntegrations;\n  }\n\n  return { ...defaultOptions, ...optionsArg };\n}\n\ntype ExtensionProperties = {\n  chrome?: Runtime;\n  browser?: Runtime;\n  nw?: unknown;\n};\ntype Runtime = {\n  runtime?: {\n    id?: string;\n  };\n};\n\nfunction shouldShowBrowserExtensionError(): boolean {\n  const windowWithMaybeExtension =\n    typeof WINDOW.window !== 'undefined' && (WINDOW as typeof WINDOW & ExtensionProperties);\n  if (!windowWithMaybeExtension) {\n    // No need to show the error if we're not in a browser window environment (e.g. service workers)\n    return false;\n  }\n\n  const extensionKey = windowWithMaybeExtension.chrome ? 'chrome' : 'browser';\n  const extensionObject = windowWithMaybeExtension[extensionKey];\n\n  const runtimeId = extensionObject && extensionObject.runtime && extensionObject.runtime.id;\n  const href = (WINDOW.location && WINDOW.location.href) || '';\n\n  const extensionProtocols = ['chrome-extension:', 'moz-extension:', 'ms-browser-extension:', 'safari-web-extension:'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    !!runtimeId && WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}//`));\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  const isNWjs = typeof windowWithMaybeExtension.nw !== 'undefined';\n\n  return !!runtimeId && !isDedicatedExtensionPage && !isNWjs;\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(browserOptions: BrowserOptions = {}): Client | undefined {\n  const options = applyDefaultOptions(browserOptions);\n\n  if (!options.skipBrowserExtensionCheck && shouldShowBrowserExtensionError()) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n      );\n    });\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    if (!supportsFetch()) {\n      logger.warn(\n        'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.',\n      );\n    }\n  }\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeFetchTransport,\n  };\n\n  return initAndBind(BrowserClient, clientOptions);\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // TODO(v9): Change this to  [key: string]: unknkown;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const scope = getCurrentScope();\n  const client = scope.getClient();\n  const dsn = client && client.getDsn();\n\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    const eventId = lastEventId();\n    if (eventId) {\n      options.eventId = eventId;\n    }\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n *\n * @deprecated Use `captureFeedback` instead.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.captureUserFeedback(feedback);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2689, "column": 0}, "map": {"version":3,"file":"index.js","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2737, "column": 0}, "map": {"version":3,"file":"featureFlags.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/utils/featureFlags.ts"],"sourcesContent":["import type { Event, FeatureFlag } from '@sentry/core';\n\nimport { getCurrentScope, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\n\n/**\n * Ordered LRU cache for storing feature flags in the scope context. The name\n * of each flag in the buffer is unique, and the output of getAll() is ordered\n * from oldest to newest.\n */\n\n/**\n * Max size of the LRU flag buffer stored in Sentry scope and event contexts.\n */\nexport const FLAG_BUFFER_SIZE = 100;\n\n/**\n * Copies feature flags that are in current scope context to the event context\n */\nexport function copyFlagsFromScopeToEvent(event: Event): Event {\n  const scope = getCurrentScope();\n  const flagContext = scope.getScopeData().contexts.flags;\n  const flagBuffer = flagContext ? flagContext.values : [];\n\n  if (!flagBuffer.length) {\n    return event;\n  }\n\n  if (event.contexts === undefined) {\n    event.contexts = {};\n  }\n  event.contexts.flags = { values: [...flagBuffer] };\n  return event;\n}\n\n/**\n * Creates a feature flags values array in current context if it does not exist\n * and inserts the flag into a FeatureFlag array while maintaining ordered LRU\n * properties. Not thread-safe. After inserting:\n * - `flags` is sorted in order of recency, with the newest flag at the end.\n * - No other flags with the same name exist in `flags`.\n * - The length of `flags` does not exceed `maxSize`. The oldest flag is evicted\n *  as needed.\n *\n * @param name     Name of the feature flag to insert.\n * @param value    Value of the feature flag.\n * @param maxSize  Max number of flags the buffer should store. It's recommended\n *   to keep this consistent across insertions. Default is FLAG_BUFFER_SIZE\n */\nexport function insertFlagToScope(name: string, value: unknown, maxSize: number = FLAG_BUFFER_SIZE): void {\n  const scopeContexts = getCurrentScope().getScopeData().contexts;\n  if (!scopeContexts.flags) {\n    scopeContexts.flags = { values: [] };\n  }\n  const flags = scopeContexts.flags.values as FeatureFlag[];\n  insertToFlagBuffer(flags, name, value, maxSize);\n}\n\n/**\n * Exported for tests. Currently only accepts boolean values (otherwise no-op).\n */\nexport function insertToFlagBuffer(flags: FeatureFlag[], name: string, value: unknown, maxSize: number): void {\n  if (typeof value !== 'boolean') {\n    return;\n  }\n\n  if (flags.length > maxSize) {\n    DEBUG_BUILD && logger.error(`[Feature Flags] insertToFlagBuffer called on a buffer larger than maxSize=${maxSize}`);\n    return;\n  }\n\n  // Check if the flag is already in the buffer - O(n)\n  const index = flags.findIndex(f => f.flag === name);\n\n  if (index !== -1) {\n    // The flag was found, remove it from its current position - O(n)\n    flags.splice(index, 1);\n  }\n\n  if (flags.length === maxSize) {\n    // If at capacity, pop the earliest flag - O(n)\n    flags.shift();\n  }\n\n  // Push the flag to the end - O(1)\n  flags.push({\n    flag: name,\n    result: value,\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAKA;;;;CAIA,GAEA;;CAEA,GACO,MAAM,gBAAiB,GAAE;AAEhC;;CAEA,GACO,SAAS,yBAAyB,CAAC,KAAK,EAAgB;IAC7D,MAAM,KAAA,2KAAQ,mBAAA,AAAe,EAAE;IAC/B,MAAM,WAAY,GAAE,KAAK,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,KAAK;IACvD,MAAM,UAAW,GAAE,WAAY,GAAE,WAAW,CAAC,MAAA,GAAS,EAAE;IAExD,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;QACtB,OAAO,KAAK;IAChB;IAEE,IAAI,KAAK,CAAC,QAAS,KAAI,SAAS,EAAE;QAChC,KAAK,CAAC,QAAS,GAAE,CAAA,CAAE;IACvB;IACE,KAAK,CAAC,QAAQ,CAAC,KAAM,GAAE;QAAE,MAAM,EAAE,CAAC;eAAG,UAAU;SAAA;IAAA,CAAG;IAClD,OAAO,KAAK;AACd;AAEA;;;;;;;;;;;;;CAaA,GACO,SAAS,iBAAiB,CAAC,IAAI,EAAU,KAAK,EAAW,OAAO,GAAW,gBAAgB,EAAQ;IACxG,MAAM,aAAc,GAAE,2LAAA,AAAe,EAAE,EAAC,YAAY,EAAE,CAAC,QAAQ;IAC/D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;QACxB,aAAa,CAAC,KAAM,GAAE;YAAE,MAAM,EAAE,EAAC;QAAA,CAAG;IACxC;IACE,MAAM,KAAM,GAAE,aAAa,CAAC,KAAK,CAAC,MAAO;IACzC,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC;AACjD;AAEA;;CAEA,GACO,SAAS,kBAAkB,CAAC,KAAK,EAAiB,IAAI,EAAU,KAAK,EAAW,OAAO,EAAgB;IAC5G,IAAI,OAAO,KAAM,KAAI,SAAS,EAAE;QAC9B;IACJ;IAEE,IAAI,KAAK,CAAC,MAAO,GAAE,OAAO,EAAE;wLAC1B,cAAA,oLAAe,SAAM,CAAC,KAAK,CAAC,CAAC,0EAA0E,EAAE,OAAO,CAAC,CAAA,CAAA;QACA;IACA;IAEA,oDAAA;IACA,MAAA,KAAA,GAAA,KAAA,CAAA,SAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA;IAEA,IAAA,KAAA,KAAA,CAAA,CAAA,EAAA;QACA,iEAAA;QACA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;IACA;IAEA,IAAA,KAAA,CAAA,MAAA,KAAA,OAAA,EAAA;QACA,+CAAA;QACA,KAAA,CAAA,KAAA,EAAA;IACA;IAEA,kCAAA;IACA,KAAA,CAAA,IAAA,CAAA;QACA,IAAA,EAAA,IAAA;QACA,MAAA,EAAA,KAAA;IACA,CAAA,CAAA;AACA","ignoreList":[0]}},
    {"offset": {"line": 2825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2831, "column": 0}, "map": {"version":3,"file":"integration.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/featureFlags/openfeature/integration.ts"],"sourcesContent":["/**\n * OpenFeature integration.\n *\n * Add the openFeatureIntegration() function call to your integration lists.\n * Add the integration hook to your OpenFeature object.\n *   - OpenFeature.getClient().addHooks(new OpenFeatureIntegrationHook());\n */\nimport type { Client, Event, EventHint, IntegrationFn } from '@sentry/core';\nimport type { EvaluationDetails, HookContext, HookHints, JsonValue, OpenFeatureHook } from './types';\n\nimport { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags';\n\nexport const openFeatureIntegration = defineIntegration(() => {\n  return {\n    name: 'OpenFeature',\n\n    processEvent(event: Event, _hint: EventHint, _client: Client): Event {\n      return copyFlagsFromScopeToEvent(event);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * OpenFeature Hook class implementation.\n */\nexport class OpenFeatureIntegrationHook implements OpenFeatureHook {\n  /**\n   * Successful evaluation result.\n   */\n  public after(_hookContext: Readonly<HookContext<JsonValue>>, evaluationDetails: EvaluationDetails<JsonValue>): void {\n    insertFlagToScope(evaluationDetails.flagKey, evaluationDetails.value);\n  }\n\n  /**\n   * On error evaluation result.\n   */\n  public error(hookContext: Readonly<HookContext<JsonValue>>, _error: unknown, _hookHints?: HookHints): void {\n    insertFlagToScope(hookContext.flagKey, hookContext.defaultValue);\n  }\n}\n"],"names":[],"mappings":";;;;;;;;MAaa,sBAAuB,0KAAE,oBAAA,AAAiB,EAAC,MAAM;IAC5D,OAAO;QACL,IAAI,EAAE,aAAa;QAEnB,YAAY,EAAC,KAAK,EAAS,KAAK,EAAa,OAAO,EAAiB;YACnE,kMAAO,4BAAA,AAAyB,EAAC,KAAK,CAAC;QAC7C,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH;;CAEA,GACO,MAAM,4BAAsD;IACnE;;GAEA,GACS,KAAK,CAAC,YAAY,EAAoC,iBAAiB,EAAsC;SAClH,8MAAA,AAAiB,EAAC,iBAAiB,CAAC,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC;IACzE;IAEA;;GAEA,GACS,KAAK,CAAC,WAAW,EAAoC,MAAM,EAAW,UAAU,EAAoB;mMACzG,oBAAA,AAAiB,EAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,YAAY,CAAC;IACpE;AACA","ignoreList":[0]}},
    {"offset": {"line": 2863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2869, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/profiling/utils.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type { DebugImage, Envelope, Event, EventEnvelope, Profile, Span, ThreadCpuProfile } from '@sentry/core';\nimport {\n  DEFAULT_ENVIRONMENT,\n  browserPerformanceTimeOrigin,\n  forEachEnvelopeItem,\n  getClient,\n  getDebugImagesForResources,\n  logger,\n  spanToJSON,\n  timestampInSeconds,\n  uuid4,\n} from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile, JSSelfProfileStack, JSSelfProfiler, JSSelfProfilerConstructor } from './jsSelfProfiling';\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (WINDOW.navigator && WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (WINDOW.navigator && WINDOW.navigator.language) ||\n  (WINDOW.navigator && WINDOW.navigator.languages && WINDOW.navigator.languages[0]) ||\n  '';\n\ntype UAData = {\n  platform?: string;\n  architecture?: string;\n  model?: string;\n  platformVersion?: string;\n  fullVersionList?: {\n    brand: string;\n    version: string;\n  }[];\n};\n\ninterface UserAgentData {\n  getHighEntropyValues: (keys: string[]) => Promise<UAData>;\n}\n\nfunction isUserAgentData(data: unknown): data is UserAgentData {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = WINDOW.navigator && WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua: UAData) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1]!;\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile: ThreadCpuProfile | JSSelfProfile): profile is JSSelfProfile {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nexport function enrichWithThreadInformation(profile: ThreadCpuProfile | JSSelfProfile): ThreadCpuProfile {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\nexport interface ProfiledEvent extends Event {\n  sdkProcessingMetadata: {\n    profile?: JSSelfProfile;\n  };\n}\n\nfunction getTraceId(event: Event): string {\n  const traceId: unknown = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nexport function createProfilePayload(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  processed_profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : timestampInSeconds() * 1000;\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : timestampInSeconds() * 1000;\n\n  const profile: Profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/**\n *\n */\nexport function isProfiledTransactionEvent(event: Event): event is ProfiledEvent {\n  return !!(event.sdkProcessingMetadata && event.sdkProcessingMetadata['profile']);\n}\n\n/*\n  See packages/browser-utils/src/browser/router.ts\n*/\n/**\n *\n */\nexport function isAutomatedPageLoadSpan(span: Span): boolean {\n  return spanToJSON(span).op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nexport function convertJSSelfProfileToSampledFormat(input: JSSelfProfile): Profile['profile'] {\n  let EMPTY_STACK_ID: undefined | number = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile: Profile['profile'] = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  const firstSample = input.samples[0];\n  if (!firstSample) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = firstSample.timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (browserPerformanceTimeOrigin || origin);\n\n  input.samples.forEach((jsSample, i) => {\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      return;\n    }\n\n    let stackTop: JSSelfProfileStack | undefined = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack: number[] = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (frame && profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample: Profile['profile']['samples'][0] = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  });\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nexport function addProfilesToEnvelope(envelope: EventEnvelope, profiles: Profile[]): Envelope {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nexport function findProfiledTransactionsFromEnvelope(envelope: Envelope): Event[] {\n  const events: Event[] = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] as Event;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] as Event);\n      }\n    }\n  });\n\n  return events;\n}\n\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nexport function applyDebugMetadata(resource_paths: ReadonlyArray<string>): DebugImage[] {\n  const client = getClient();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  return getDebugImagesForResources(stackParser, resource_paths);\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile: JSSelfProfile): profile is JSSelfProfile & { profile_id: string } {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED: boolean = false;\nexport const MAX_PROFILE_DURATION_MS = 30_000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler: unknown): maybeProfiler is typeof JSSelfProfilerConstructor {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nexport function startJSSelfProfile(): JSSelfProfiler | undefined {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nexport function shouldProfileSpan(span: Span): boolean {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!span.isRecording()) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate: number | boolean | undefined = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nexport function createProfilingEvent(\n  profile_id: string,\n  start_timestamp: number | undefined,\n  profile: JSSelfProfile,\n  event: ProfiledEvent,\n): Profile | null {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependency. We need to resolve this in v8.\nconst PROFILE_MAP: Map<string, JSSelfProfile> = new Map();\n/**\n *\n */\nexport function getActiveProfilesCount(): number {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nexport function takeProfileFromGlobalCache(profile_id: string): JSSelfProfile | undefined {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nexport function addProfileToGlobalCache(profile_id: string, profile: JSSelfProfile): void {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last: string = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3326, "column": 0}, "map": {"version":3,"file":"startProfileForSpan.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/profiling/startProfileForSpan.ts"],"sourcesContent":["import { getCurrentScope, spanToJSON } from '@sentry/core';\nimport { logger, timestampInSeconds, uuid4 } from '@sentry/core';\nimport type { Span } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\nimport type { JSSelfProfile } from './jsSelfProfiling';\nimport { MAX_PROFILE_DURATION_MS, addProfileToGlobalCache, isAutomatedPageLoadSpan, startJSSelfProfile } from './utils';\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nexport function startProfileForSpan(span: Span): void {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp: number | undefined;\n  if (isAutomatedPageLoadSpan(span)) {\n    startTimestamp = timestampInSeconds() * 1000;\n  }\n\n  const profiler = startJSSelfProfile();\n\n  // We failed to construct the profiler, so we skip.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    logger.log(`[Profiling] started profiling span: ${spanToJSON(span).description}`);\n  }\n\n  // We create \"unique\" span names to avoid concurrent spans with same names\n  // from being ignored by the profiler. From here on, only this span name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = uuid4();\n\n  // A couple of important things to note here:\n  // `CpuProfilerBindings.stopProfiling` will be scheduled to run in 30seconds in order to exceed max profile duration.\n  // Whichever of the two (span.finish/timeout) is first to run, the profiling will be stopped and the gathered profile\n  // will be processed when the original span is finished. Since onProfileHandler can be invoked multiple times in the\n  // event of an error or user mistake (calling span.finish multiple times), it is important that the behavior of onProfileHandler\n  // is idempotent as we do not want any timings or profiles to be overridden by the last call to onProfileHandler.\n  // After the original finish method is called, the event will be reported through the integration and delegated to transport.\n  const processedProfile: JSSelfProfile | null = null;\n\n  getCurrentScope().setContext('profile', {\n    profile_id: profileId,\n    start_timestamp: startTimestamp,\n  });\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler(): Promise<void> {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call span.finish multiple times.\n    if (!span) {\n      return;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return;\n    }\n    if (processedProfile) {\n      if (DEBUG_BUILD) {\n        logger.log('[Profiling] profile for:', spanToJSON(span).description, 'already exists, returning early');\n      }\n      return;\n    }\n\n    return profiler\n      .stop()\n      .then((profile: JSSelfProfile): void => {\n        if (maxDurationTimeoutID) {\n          WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Profiling] stopped profiling of span: ${spanToJSON(span).description}`);\n        }\n\n        // In case of an overlapping span, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (DEBUG_BUILD) {\n            logger.log(\n              `[Profiling] profiler returned null profile for: ${spanToJSON(span).description}`,\n              'this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return;\n        }\n\n        addProfileToGlobalCache(profileId, profile);\n      })\n      .catch(error => {\n        if (DEBUG_BUILD) {\n          logger.log('[Profiling] error while stopping profiler:', error);\n        }\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID: number | undefined = WINDOW.setTimeout(() => {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] max profile duration elapsed, stopping profiling for:', spanToJSON(span).description);\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the span\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = span.end.bind(span);\n\n  /**\n   * Wraps span `end()` with profiling related logic.\n   * startProfiling is called after the call to spanStart in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to spanEnd.\n   */\n  function profilingWrappedSpanEnd(): Span {\n    if (!span) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return span;\n  }\n\n  span.end = profilingWrappedSpanEnd;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AASA;;;;CAIA,GACO,SAAS,mBAAmB,CAAC,IAAI,EAAc;IACtD,oDAAA;IACE,IAAI,cAAc;IAClB,4LAAI,0BAAA,AAAuB,EAAC,IAAI,CAAC,EAAE;QACjC,kBAAiB,sMAAA,AAAkB,EAAC,IAAI,IAAI;IAChD;IAEE,MAAM,QAAA,2LAAW,qBAAA,AAAkB,EAAE;IAEvC,mDAAA;IACA,2EAAA;IACE,IAAI,CAAC,QAAQ,EAAE;QACb;IACJ;IAEE,oLAAI,cAAW,EAAE;wLACf,SAAM,CAAC,GAAG,CAAC,CAAC,oCAAoC,gLAAE,aAAA,AAAU,EAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAA,CAAA;IACA;IAEA,0EAAA;IACA,4FAAA;IACA,+FAAA;IACA,MAAA,SAAA,qLAAA,QAAA,EAAA;KAWA,0LAAA,EAAA,EAAA,UAAA,CAAA,SAAA,EAAA;QACA,UAAA,EAAA,SAAA;QACA,eAAA,EAAA,cAAA;IACA,CAAA,CAAA;IAEA;;GAEA,GACA,eAAA,gBAAA,GAAA;QACA,4HAAA;QACA,IAAA,CAAA,IAAA,EAAA;YACA;QACA;QACA,sEAAA;QACA,IAAA,CAAA,QAAA,EAAA;YACA;QACA;QAQA,OAAA,SACA,IAAA,GACA,IAAA,CAAA,CAAA,OAAA,KAAA;YACA,IAAA,oBAAA,EAAA;yLACA,SAAA,CAAA,YAAA,CAAA,oBAAA,CAAA;gBACA,oBAAA,GAAA,SAAA;YACA;YAEA,oLAAA,cAAA,EAAA;gMACA,SAAA,CAAA,GAAA,CAAA,CAAA,uCAAA,gLAAA,aAAA,EAAA,IAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA;YACA;YAEA,6GAAA;YACA,IAAA,CAAA,OAAA,EAAA;gBACA,IAAA,8LAAA,EAAA;oMACA,SAAA,CAAA,GAAA,CACA,CAAA,gDAAA,gLAAA,aAAA,EAAA,IAAA,CAAA,CAAA,WAAA,CAAA,CAAA,EACA,8GAAA;gBAEA;gBACA;YACA;oMAEA,0BAAA,EAAA,SAAA,EAAA,OAAA,CAAA;QACA,CAAA,EACA,KAAA,EAAA,KAAA,IAAA;YACA,mLAAA,eAAA,EAAA;gMACA,SAAA,CAAA,GAAA,CAAA,4CAAA,EAAA,KAAA,CAAA;YACA;QACA,CAAA,CAAA;IACA;IAEA,wEAAA;IACA,IAAA,oBAAA,4KAAA,SAAA,CAAA,UAAA,CAAA,MAAA;QACA,oLAAA,cAAA,EAAA;4LACA,SAAA,CAAA,GAAA,CAAA,mEAAA,EAAA,2LAAA,EAAA,IAAA,CAAA,CAAA,WAAA,CAAA;QACA;QACA,6EAAA;QACA,mEAAA;QACA,gBAAA,EAAA;IACA,CAAA,qLAAA,2BAAA,CAAA;IAEA,gFAAA;IACA,MAAA,WAAA,GAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA;IAEA;;;;GAIA,GACA,SAAA,uBAAA,GAAA;QACA,IAAA,CAAA,IAAA,EAAA;YACA,OAAA,WAAA,EAAA;QACA;QACA,gGAAA;QACA,6FAAA;QACA,KAAA,gBAAA,EAAA,CAAA,IAAA,CACA,MAAA;YACA,WAAA,EAAA;QACA,CAAA,EACA,MAAA;YACA,+EAAA;YACA,WAAA,EAAA;QACA,CAAA;QAGA,OAAA,IAAA;IACA;IAEA,IAAA,CAAA,GAAA,GAAA,uBAAA;AACA","ignoreList":[0]}},
    {"offset": {"line": 3434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3440, "column": 0}, "map": {"version":3,"file":"integration.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/profiling/integration.ts"],"sourcesContent":["import { defineIntegration, getActiveSpan, getRootSpan } from '@sentry/core';\nimport { logger } from '@sentry/core';\nimport type { EventEnvelope, IntegrationFn, Profile, Span } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { startProfileForSpan } from './startProfileForSpan';\nimport type { ProfiledEvent } from './utils';\nimport { isAutomatedPageLoadSpan, shouldProfileSpan } from './utils';\nimport {\n  addProfilesToEnvelope,\n  createProfilingEvent,\n  findProfiledTransactionsFromEnvelope,\n  getActiveProfilesCount,\n  takeProfileFromGlobalCache,\n} from './utils';\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const activeSpan = getActiveSpan();\n      const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n      if (rootSpan && isAutomatedPageLoadSpan(rootSpan)) {\n        if (shouldProfileSpan(rootSpan)) {\n          startProfileForSpan(rootSpan);\n        }\n      }\n\n      client.on('spanStart', (span: Span) => {\n        if (span === getRootSpan(span) && shouldProfileSpan(span)) {\n          startProfileForSpan(span);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope): void => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!getActiveProfilesCount()) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope: Profile[] = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the span context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = takeProfileFromGlobalCache(profile_id);\n          if (!profile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for span: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = createProfilingEvent(\n            profile_id,\n            start_timestamp as number | undefined,\n            profile,\n            profiledTransaction as ProfiledEvent,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        addProfilesToEnvelope(envelope as EventEnvelope, profilesToAddToEnvelope);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserProfilingIntegration = defineIntegration(_browserProfilingIntegration);\n"],"names":[],"mappings":";;;;;;;;;;;;;AAgBA,MAAM,gBAAA,GAAmB,kBAAkB;AAE3C,MAAM,4BAA6B,GAAG,MAAM;IAC1C,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,KAAK,EAAC,MAAM,EAAE;YACZ,MAAM,UAAA,iLAAa,gBAAA,AAAa,EAAE;YAClC,MAAM,WAAW,UAAA,kLAAc,cAAA,AAAW,EAAC,UAAU,CAAC;YAEtD,IAAI,QAAS,4LAAG,0BAAA,AAAuB,EAAC,QAAQ,CAAC,EAAE;gBACjD,KAAI,2MAAA,AAAiB,EAAC,QAAQ,CAAC,EAAE;0NAC/B,sBAAA,AAAmB,EAAC,QAAQ,CAAC;gBACvC;YACA;YAEM,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,IAAI,KAAW;gBACrC,IAAI,IAAK,mLAAI,cAAA,AAAW,EAAC,IAAI,CAAA,4LAAK,oBAAA,AAAiB,EAAC,IAAI,CAAC,EAAE;oBACzD,4NAAA,AAAmB,EAAC,IAAI,CAAC;gBACnC;YACA,CAAO,CAAC;YAEF,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,QAAQ,KAAW;gBACtD,yEAAA;gBACQ,IAAI,KAAC,6MAAA,AAAsB,EAAE,GAAE;oBAC7B;gBACV;gBAEQ,MAAM,yBAA0B,2LAAE,uCAAA,AAAoC,EAAC,QAAQ,CAAC;gBAChF,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE;oBACrC;gBACV;gBAEQ,MAAM,uBAAuB,GAAc,EAAE;gBAE7C,KAAK,MAAM,mBAAoB,IAAG,yBAAyB,CAAE;oBAC3D,MAAM,OAAQ,GAAE,uBAAuB,mBAAmB,CAAC,QAAQ;oBACnE,MAAM,UAAW,GAAE,OAAQ,IAAG,OAAO,CAAC,SAAS,CAAE,IAAG,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC;oBACpF,MAAM,eAAgB,GAAE,OAAQ,IAAG,OAAO,CAAC,SAAS,CAAE,IAAG,OAAO,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC;oBAE9F,IAAI,OAAO,UAAW,KAAI,QAAQ,EAAE;wBAClC,8LAAA,oLAAe,SAAM,CAAC,GAAG,CAAC,sEAAsE,CAAC;wBACjG;oBACZ;oBAEU,IAAI,CAAC,UAAU,EAAE;wMACf,cAAA,mLAAe,UAAM,CAAC,GAAG,CAAC,sEAAsE,CAAC;wBACjG;oBACZ;oBAEA,6FAAA;oBACU,IAAI,OAAQ,IAAG,OAAO,CAAC,SAAS,CAAC,EAAE;wBACjC,OAAO,OAAO,CAAC,OAAO;oBAClC;oBAEU,MAAM,OAAQ,2LAAE,6BAAA,AAA0B,EAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,OAAO,EAAE;wBACZ,8LAAA,oLAAe,SAAM,CAAC,GAAG,CAAC,CAAC,iDAAiD,EAAE,UAAU,CAAC,CAAA,CAAA;wBACA;oBACA;oBAEA,MAAA,YAAA,2LAAA,uBAAA,EACA,UAAA,EACA,eAAA,EACA,OAAA,EACA,mBAAA;oBAEA,IAAA,YAAA,EAAA;wBACA,uBAAA,CAAA,IAAA,CAAA,YAAA,CAAA;oBACA;gBACA;wMAEA,wBAAA,EAAA,QAAA,EAAA,uBAAA,CAAA;YACA,CAAA,CAAA;QACA,CAAA;IACA,CAAA;AACA,CAAA,CAAA;AAEA,MAAA,2BAAA,0KAAA,oBAAA,EAAA,4BAAA","ignoreList":[0]}},
    {"offset": {"line": 3514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3520, "column": 0}, "map": {"version":3,"file":"integration.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/featureFlags/launchdarkly/integration.ts"],"sourcesContent":["import type { Client, Event, EventHint, IntegrationFn } from '@sentry/core';\nimport type { LDContext, LDEvaluationDetail, LDInspectionFlagUsedHandler } from './types';\n\nimport { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags';\n\n/**\n * Sentry integration for capturing feature flags from LaunchDarkly.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import * as Sentry from '@sentry/browser';\n * import {launchDarklyIntegration, buildLaunchDarklyFlagUsedInspector} from '@sentry/browser';\n * import * as LaunchDarkly from 'launchdarkly-js-client-sdk';\n *\n * Sentry.init(..., integrations: [launchDarklyIntegration()])\n * const ldClient = LaunchDarkly.initialize(..., {inspectors: [buildLaunchDarklyFlagUsedHandler()]});\n * ```\n */\nexport const launchDarklyIntegration = defineIntegration(() => {\n  return {\n    name: 'LaunchDarkly',\n\n    processEvent(event: Event, _hint: EventHint, _client: Client): Event {\n      return copyFlagsFromScopeToEvent(event);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * LaunchDarkly hook that listens for flag evaluations and updates the `flags`\n * context in our Sentry scope. This needs to be registered as an\n * 'inspector' in LaunchDarkly initialize() options, separately from\n * `launchDarklyIntegration`. Both are needed to collect feature flags on error.\n */\nexport function buildLaunchDarklyFlagUsedHandler(): LDInspectionFlagUsedHandler {\n  return {\n    name: 'sentry-flag-auditor',\n    type: 'flag-used',\n\n    synchronous: true,\n\n    /**\n     * Handle a flag evaluation by storing its name and value on the current scope.\n     */\n    method: (flagKey: string, flagDetail: LDEvaluationDetail, _context: LDContext) => {\n      insertFlagToScope(flagKey, flagDetail.value);\n    },\n  };\n}\n"],"names":[],"mappings":";;;;;;;;AAMA;;;;;;;;;;;;;;CAcA,SACa,uBAAwB,0KAAE,oBAAA,AAAiB,EAAC,MAAM;IAC7D,OAAO;QACL,IAAI,EAAE,cAAc;QAEpB,YAAY,EAAC,KAAK,EAAS,KAAK,EAAa,OAAO,EAAiB;YACnE,kMAAO,4BAAA,AAAyB,EAAC,KAAK,CAAC;QAC7C,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH;;;;;CAKA,GACO,SAAS,gCAAgC,GAAgC;IAC9E,OAAO;QACL,IAAI,EAAE,qBAAqB;QAC3B,IAAI,EAAE,WAAW;QAEjB,WAAW,EAAE,IAAI;QAErB;;KAEA,GACI,MAAM,EAAE,CAAC,OAAO,EAAU,UAAU,EAAsB,QAAQ,KAAgB;uMAChF,oBAAA,AAAiB,EAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC;QAClD,CAAK;IACL,CAAG;AACH","ignoreList":[0]}},
    {"offset": {"line": 3569, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3575, "column": 0}, "map": {"version":3,"file":"contextlines.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/contextlines.ts"],"sourcesContent":["import type { Event, IntegrationFn, StackFrame } from '@sentry/core';\nimport { GLOBAL_OBJ, addContextToFrame, defineIntegration, stripUrlQueryAndFragment } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\nconst INTEGRATION_NAME = 'ContextLines';\n\ninterface ContextLinesOptions {\n  /**\n   * Sets the number of context lines for each frame when loading a file.\n   * Defaults to 7.\n   *\n   * Set to 0 to disable loading and inclusion of source files.\n   **/\n  frameContextLines?: number;\n}\n\nconst _contextLinesIntegration = ((options: ContextLinesOptions = {}) => {\n  const contextLines = options.frameContextLines != null ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Collects source context lines around the lines of stackframes pointing to JS embedded in\n * the current page's HTML.\n *\n * This integration DOES NOT work for stack frames pointing to JS files that are loaded by the browser.\n * For frames pointing to files, context lines are added during ingestion and symbolication\n * by attempting to download the JS files to the Sentry backend.\n *\n * Use this integration if you have inline JS code in HTML pages that can't be accessed\n * by our backend (e.g. due to a login-protected page).\n */\nexport const contextLinesIntegration = defineIntegration(_contextLinesIntegration);\n\n/**\n * Processes an event and adds context lines.\n */\nfunction addSourceContext(event: Event, contextLines: number): Event {\n  const doc = WINDOW.document;\n  const htmlFilename = WINDOW.location && stripUrlQueryAndFragment(WINDOW.location.href);\n  if (!doc || !htmlFilename) {\n    return event;\n  }\n\n  const exceptions = event.exception && event.exception.values;\n  if (!exceptions || !exceptions.length) {\n    return event;\n  }\n\n  const html = doc.documentElement.innerHTML;\n  if (!html) {\n    return event;\n  }\n\n  const htmlLines = ['<!DOCTYPE html>', '<html>', ...html.split('\\n'), '</html>'];\n\n  exceptions.forEach(exception => {\n    const stacktrace = exception.stacktrace;\n    if (stacktrace && stacktrace.frames) {\n      stacktrace.frames = stacktrace.frames.map(frame =>\n        applySourceContextToFrame(frame, htmlLines, htmlFilename, contextLines),\n      );\n    }\n  });\n\n  return event;\n}\n\n/**\n * Only exported for testing\n */\nexport function applySourceContextToFrame(\n  frame: StackFrame,\n  htmlLines: string[],\n  htmlFilename: string,\n  linesOfContext: number,\n): StackFrame {\n  if (frame.filename !== htmlFilename || !frame.lineno || !htmlLines.length) {\n    return frame;\n  }\n\n  addContextToFrame(htmlLines, frame, linesOfContext);\n\n  return frame;\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA,MAAM,MAAA,sLAAS,aAAW;AAE1B,MAAM,wBAAA,GAA2B,CAAC;AAElC,MAAM,gBAAA,GAAmB,cAAc;AAYvC,MAAM,wBAAA,GAA4B,CAAC,OAAO,GAAwB,CAAA,CAAE,KAAK;IACvE,MAAM,YAAA,GAAe,OAAO,CAAC,iBAAA,IAAqB,IAAA,GAAO,OAAO,CAAC,iBAAA,GAAoB,wBAAwB;IAE7G,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,YAAY,EAAC,KAAK,EAAE;YAClB,OAAO,gBAAgB,CAAC,KAAK,EAAE,YAAY,CAAC;QAClD,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH;;;;;;;;;;CAUA,SACa,uBAAwB,0KAAE,oBAAA,AAAiB,EAAC,wBAAwB;AAEjF;;CAEA,GACA,SAAS,gBAAgB,CAAC,KAAK,EAAS,YAAY,EAAiB;IACnE,MAAM,GAAA,GAAM,MAAM,CAAC,QAAQ;IAC3B,MAAM,YAAA,GAAe,MAAM,CAAC,QAAS,qLAAG,2BAAA,AAAwB,EAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IACtF,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;QACzB,OAAO,KAAK;IAChB;IAEE,MAAM,UAAW,GAAE,KAAK,CAAC,SAAU,IAAG,KAAK,CAAC,SAAS,CAAC,MAAM;IAC5D,IAAI,CAAC,UAAA,IAAc,CAAC,UAAU,CAAC,MAAM,EAAE;QACrC,OAAO,KAAK;IAChB;IAEE,MAAM,IAAK,GAAE,GAAG,CAAC,eAAe,CAAC,SAAS;IAC1C,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,KAAK;IAChB;IAEE,MAAM,SAAU,GAAE;QAAC,iBAAiB;QAAE,QAAQ,EAAE;WAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAAE,SAAS;KAAC;IAE/E,UAAU,CAAC,OAAO,EAAC,aAAa;QAC9B,MAAM,UAAA,GAAa,SAAS,CAAC,UAAU;QACvC,IAAI,UAAA,IAAc,UAAU,CAAC,MAAM,EAAE;YACnC,UAAU,CAAC,MAAA,GAAS,UAAU,CAAC,MAAM,CAAC,GAAG,EAAC,KAAM,GAC9C,yBAAyB,CAAC,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC;QAE/E;IACA,CAAG,CAAC;IAEF,OAAO,KAAK;AACd;AAEA;;CAEA,GACO,SAAS,yBAAyB,CACvC,KAAK,EACL,SAAS,EACT,YAAY,EACZ,cAAc;IAEd,IAAI,KAAK,CAAC,QAAA,KAAa,YAAa,IAAG,CAAC,KAAK,CAAC,MAAO,IAAG,CAAC,SAAS,CAAC,MAAM,EAAE;QACzE,OAAO,KAAK;IAChB;sLAEE,oBAAA,AAAiB,EAAC,SAAS,EAAE,KAAK,EAAE,cAAc,CAAC;IAEnD,OAAO,KAAK;AACd","ignoreList":[0]}},
    {"offset": {"line": 3648, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3654, "column": 0}, "map": {"version":3,"file":"featureFlagsIntegration.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/featureFlags/featureFlagsIntegration.ts"],"sourcesContent":["import type { Client, Event, EventHint, Integration, IntegrationFn } from '@sentry/core';\n\nimport { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../utils/featureFlags';\n\nexport interface FeatureFlagsIntegration extends Integration {\n  addFeatureFlag: (name: string, value: unknown) => void;\n}\n\n/**\n * Sentry integration for buffering feature flags manually with an API, and\n * capturing them on error events. We recommend you do this on each flag\n * evaluation. Flags are buffered per Sentry scope and limited to 100 per event.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import * as Sentry from '@sentry/browser';\n * import { type FeatureFlagsIntegration } from '@sentry/browser';\n *\n * // Setup\n * Sentry.init(..., integrations: [Sentry.featureFlagsIntegration()])\n *\n * // Verify\n * const flagsIntegration = Sentry.getClient()?.getIntegrationByName<FeatureFlagsIntegration>('FeatureFlags');\n * if (flagsIntegration) {\n *   flagsIntegration.addFeatureFlag('my-flag', true);\n * } else {\n *   // check your setup\n * }\n * Sentry.captureException(Exception('broke')); // 'my-flag' should be captured to this Sentry event.\n * ```\n */\nexport const featureFlagsIntegration = defineIntegration(() => {\n  return {\n    name: 'FeatureFlags',\n\n    processEvent(event: Event, _hint: EventHint, _client: Client): Event {\n      return copyFlagsFromScopeToEvent(event);\n    },\n\n    addFeatureFlag(name: string, value: unknown): void {\n      insertFlagToScope(name, value);\n    },\n  };\n}) as IntegrationFn<FeatureFlagsIntegration>;\n"],"names":[],"mappings":";;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;CAwBA,SACa,uBAAwB,0KAAE,oBAAA,AAAiB,EAAC,MAAM;IAC7D,OAAO;QACL,IAAI,EAAE,cAAc;QAEpB,YAAY,EAAC,KAAK,EAAS,KAAK,EAAa,OAAO,EAAiB;YACnE,kMAAO,4BAAA,AAAyB,EAAC,KAAK,CAAC;QAC7C,CAAK;QAED,cAAc,EAAC,IAAI,EAAU,KAAK,EAAiB;uMACjD,oBAAA,AAAiB,EAAC,IAAI,EAAE,KAAK,CAAC;QACpC,CAAK;IACL,CAAG;AACH,CAAC,CAAE","ignoreList":[0]}},
    {"offset": {"line": 3698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3704, "column": 0}, "map": {"version":3,"file":"lazyLoadIntegration.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/utils/lazyLoadIntegration.ts"],"sourcesContent":["import { SDK_VERSION, getClient } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/core';\nimport type { BrowserClient } from '../client';\nimport { WINDOW } from '../helpers';\n\n// This is a map of integration function method to bundle file name.\nconst LazyLoadableIntegrations = {\n  replayIntegration: 'replay',\n  replayCanvasIntegration: 'replay-canvas',\n  feedbackIntegration: 'feedback',\n  feedbackModalIntegration: 'feedback-modal',\n  feedbackScreenshotIntegration: 'feedback-screenshot',\n  captureConsoleIntegration: 'captureconsole',\n  contextLinesIntegration: 'contextlines',\n  linkedErrorsIntegration: 'linkederrors',\n  debugIntegration: 'debug',\n  dedupeIntegration: 'dedupe',\n  extraErrorDataIntegration: 'extraerrordata',\n  httpClientIntegration: 'httpclient',\n  reportingObserverIntegration: 'reportingobserver',\n  rewriteFramesIntegration: 'rewriteframes',\n  sessionTimingIntegration: 'sessiontiming',\n  browserProfilingIntegration: 'browserprofiling',\n  moduleMetadataIntegration: 'modulemetadata',\n} as const;\n\nconst WindowWithMaybeIntegration = WINDOW as {\n  Sentry?: Partial<Record<keyof typeof LazyLoadableIntegrations, IntegrationFn>>;\n};\n\n/**\n * Lazy load an integration from the CDN.\n * Rejects if the integration cannot be loaded.\n */\nexport async function lazyLoadIntegration(\n  name: keyof typeof LazyLoadableIntegrations,\n  scriptNonce?: string,\n): Promise<IntegrationFn> {\n  const bundle = LazyLoadableIntegrations[name];\n\n  // `window.Sentry` is only set when using a CDN bundle, but this method can also be used via the NPM package\n  const sentryOnWindow = (WindowWithMaybeIntegration.Sentry = WindowWithMaybeIntegration.Sentry || {});\n\n  if (!bundle) {\n    throw new Error(`Cannot lazy load integration: ${name}`);\n  }\n\n  // Bail if the integration already exists\n  const existing = sentryOnWindow[name];\n  // The `feedbackIntegration` is loaded by default in the CDN bundles,\n  // so we need to differentiate between the real integration and the shim.\n  // if only the shim exists, we still want to lazy load the real integration.\n  if (typeof existing === 'function' && !('_isShim' in existing)) {\n    return existing;\n  }\n\n  const url = getScriptURL(bundle);\n  const script = WINDOW.document.createElement('script');\n  script.src = url;\n  script.crossOrigin = 'anonymous';\n  script.referrerPolicy = 'origin';\n\n  if (scriptNonce) {\n    script.setAttribute('nonce', scriptNonce);\n  }\n\n  const waitForLoad = new Promise<void>((resolve, reject) => {\n    script.addEventListener('load', () => resolve());\n    script.addEventListener('error', reject);\n  });\n\n  const currentScript = WINDOW.document.currentScript;\n  const parent = WINDOW.document.body || WINDOW.document.head || (currentScript && currentScript.parentElement);\n\n  if (parent) {\n    parent.appendChild(script);\n  } else {\n    throw new Error(`Could not find parent element to insert lazy-loaded ${name} script`);\n  }\n\n  try {\n    await waitForLoad;\n  } catch {\n    throw new Error(`Error when loading integration: ${name}`);\n  }\n\n  const integrationFn = sentryOnWindow[name];\n\n  if (typeof integrationFn !== 'function') {\n    throw new Error(`Could not load integration: ${name}`);\n  }\n\n  return integrationFn;\n}\n\nfunction getScriptURL(bundle: string): string {\n  const client = getClient<BrowserClient>();\n  const options = client && client.getOptions();\n  const baseURL = (options && options.cdnBaseUrl) || 'https://browser.sentry-cdn.com';\n\n  return new URL(`/${SDK_VERSION}/${bundle}.min.js`, baseURL).toString();\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3795, "column": 0}, "map": {"version":3,"file":"feedbackAsync.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/feedbackAsync.ts"],"sourcesContent":["import { buildFeedbackIntegration } from '@sentry-internal/feedback';\nimport { lazyLoadIntegration } from './utils/lazyLoadIntegration';\n\n/**\n * An integration to add user feedback to your application,\n * while loading most of the code lazily only when it's needed.\n */\nexport const feedbackAsyncIntegration = buildFeedbackIntegration({\n  lazyLoadIntegration,\n});\n"],"names":[],"mappings":";;;;;;;AAGA;;;CAGA,GACa,MAAA,wBAAA,2LAA2B,2BAAA,AAAwB,EAAC;uNAC/D,sBAAmB;AACrB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3810, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3816, "column": 0}, "map": {"version":3,"file":"feedbackSync.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/feedbackSync.ts"],"sourcesContent":["import {\n  buildFeedbackIntegration,\n  feedbackModalIntegration,\n  feedbackScreenshotIntegration,\n} from '@sentry-internal/feedback';\nimport { lazyLoadIntegration } from './utils/lazyLoadIntegration';\n\n/** Add a widget to capture user feedback to your application. */\nexport const feedbackSyncIntegration = buildFeedbackIntegration({\n  lazyLoadIntegration,\n  getModalIntegration: () => feedbackModalIntegration,\n  getScreenshotIntegration: () => feedbackScreenshotIntegration,\n});\n"],"names":[],"mappings":";;;;;;;AAOA,+DAAA,GACa,MAAA,uBAAA,2LAA0B,2BAAA,AAAwB,EAAC;uNAC9D,sBAAmB;IACnB,mBAAmB,EAAE,wLAAM,2BAAwB;IACnD,wBAAwB,EAAE,wLAAM,gCAA6B;AAC/D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3836, "column": 0}, "map": {"version":3,"file":"httpclient.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/httpclient.ts"],"sourcesContent":["import { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport type { Client, Event as SentryEvent, IntegrationFn, SentryWrappedXMLHttpRequest } from '@sentry/core';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addFetchInstrumentationHandler,\n  captureEvent,\n  defineIntegration,\n  getClient,\n  isSentryRequestUrl,\n  logger,\n  supportsNativeFetch,\n} from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport type HttpStatusCodeRange = [number, number] | number;\nexport type HttpRequestTarget = string | RegExp;\n\nconst INTEGRATION_NAME = 'HttpClient';\n\ninterface HttpClientOptions {\n  /**\n   * HTTP status codes that should be considered failed.\n   * This array can contain tuples of `[begin, end]` (both inclusive),\n   * single status codes, or a combinations of both\n   *\n   * Example: [[500, 505], 507]\n   * Default: [[500, 599]]\n   */\n  failedRequestStatusCodes: HttpStatusCodeRange[];\n\n  /**\n   * Targets to track for failed requests.\n   * This array can contain strings or regular expressions.\n   *\n   * Example: ['http://localhost', /api\\/.*\\/]\n   * Default: [/.*\\/]\n   */\n  failedRequestTargets: HttpRequestTarget[];\n}\n\nconst _httpClientIntegration = ((options: Partial<HttpClientOptions> = {}) => {\n  const _options: HttpClientOptions = {\n    failedRequestStatusCodes: [[500, 599]],\n    failedRequestTargets: [/.*/],\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client): void {\n      _wrapFetch(client, _options);\n      _wrapXHR(client, _options);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Create events for failed client side HTTP requests.\n */\nexport const httpClientIntegration = defineIntegration(_httpClientIntegration);\n\n/**\n * Interceptor function for fetch requests\n *\n * @param requestInfo The Fetch API request info\n * @param response The Fetch API response\n * @param requestInit The request init object\n */\nfunction _fetchResponseHandler(\n  options: HttpClientOptions,\n  requestInfo: RequestInfo,\n  response: Response,\n  requestInit?: RequestInit,\n  error?: unknown,\n): void {\n  if (_shouldCaptureResponse(options, response.status, response.url)) {\n    const request = _getRequest(requestInfo, requestInit);\n\n    let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n    if (_shouldSendDefaultPii()) {\n      [requestHeaders, requestCookies] = _parseCookieHeaders('Cookie', request);\n      [responseHeaders, responseCookies] = _parseCookieHeaders('Set-Cookie', response);\n    }\n\n    const event = _createEvent({\n      url: request.url,\n      method: request.method,\n      status: response.status,\n      requestHeaders,\n      responseHeaders,\n      requestCookies,\n      responseCookies,\n      error,\n    });\n\n    captureEvent(event);\n  }\n}\n\nfunction _parseCookieHeaders(\n  cookieHeader: string,\n  obj: Request | Response,\n): [Record<string, string>, Record<string, string> | undefined] {\n  const headers = _extractFetchHeaders(obj.headers);\n  let cookies;\n\n  try {\n    const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n    if (cookieString) {\n      cookies = _parseCookieString(cookieString);\n    }\n  } catch {\n    // ignore it if parsing fails\n  }\n\n  return [headers, cookies];\n}\n\n/**\n * Interceptor function for XHR requests\n *\n * @param xhr The XHR request\n * @param method The HTTP method\n * @param headers The HTTP headers\n */\nfunction _xhrResponseHandler(\n  options: HttpClientOptions,\n  xhr: XMLHttpRequest,\n  method: string,\n  headers: Record<string, string>,\n  error?: unknown,\n): void {\n  if (_shouldCaptureResponse(options, xhr.status, xhr.responseURL)) {\n    let requestHeaders, responseCookies, responseHeaders;\n\n    if (_shouldSendDefaultPii()) {\n      try {\n        const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n        if (cookieString) {\n          responseCookies = _parseCookieString(cookieString);\n        }\n      } catch {\n        // ignore it if parsing fails\n      }\n\n      try {\n        responseHeaders = _getXHRResponseHeaders(xhr);\n      } catch {\n        // ignore it if parsing fails\n      }\n\n      requestHeaders = headers;\n    }\n\n    const event = _createEvent({\n      url: xhr.responseURL,\n      method,\n      status: xhr.status,\n      requestHeaders,\n      // Can't access request cookies from XHR\n      responseHeaders,\n      responseCookies,\n      error,\n    });\n\n    captureEvent(event);\n  }\n}\n\n/**\n * Extracts response size from `Content-Length` header when possible\n *\n * @param headers\n * @returns The response size in bytes or undefined\n */\nfunction _getResponseSizeFromHeaders(headers?: Record<string, string>): number | undefined {\n  if (headers) {\n    const contentLength = headers['Content-Length'] || headers['content-length'];\n\n    if (contentLength) {\n      return parseInt(contentLength, 10);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates an object containing cookies from the given cookie string\n *\n * @param cookieString The cookie string to parse\n * @returns The parsed cookies\n */\nfunction _parseCookieString(cookieString: string): Record<string, string> {\n  return cookieString.split('; ').reduce((acc: Record<string, string>, cookie: string) => {\n    const [key, value] = cookie.split('=');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Extracts the headers as an object from the given Fetch API request or response object\n *\n * @param headers The headers to extract\n * @returns The extracted headers as an object\n */\nfunction _extractFetchHeaders(headers: Headers): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  headers.forEach((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\n/**\n * Extracts the response headers as an object from the given XHR object\n *\n * @param xhr The XHR object to extract the response headers from\n * @returns The response headers as an object\n */\nfunction _getXHRResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    if (key && value) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Checks if the given target url is in the given list of targets\n *\n * @param target The target url to check\n * @returns true if the target url is in the given list of targets, false otherwise\n */\nfunction _isInGivenRequestTargets(\n  failedRequestTargets: HttpClientOptions['failedRequestTargets'],\n  target: string,\n): boolean {\n  return failedRequestTargets.some((givenRequestTarget: HttpRequestTarget) => {\n    if (typeof givenRequestTarget === 'string') {\n      return target.includes(givenRequestTarget);\n    }\n\n    return givenRequestTarget.test(target);\n  });\n}\n\n/**\n * Checks if the given status code is in the given range\n *\n * @param status The status code to check\n * @returns true if the status code is in the given range, false otherwise\n */\nfunction _isInGivenStatusRanges(\n  failedRequestStatusCodes: HttpClientOptions['failedRequestStatusCodes'],\n  status: number,\n): boolean {\n  return failedRequestStatusCodes.some((range: HttpStatusCodeRange) => {\n    if (typeof range === 'number') {\n      return range === status;\n    }\n\n    return status >= range[0] && status <= range[1];\n  });\n}\n\n/**\n * Wraps `fetch` function to capture request and response data\n */\nfunction _wrapFetch(client: Client, options: HttpClientOptions): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  addFetchInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { response, args, error, virtualError } = handlerData;\n    const [requestInfo, requestInit] = args as [RequestInfo, RequestInit | undefined];\n\n    if (!response) {\n      return;\n    }\n\n    _fetchResponseHandler(options, requestInfo, response as Response, requestInit, error || virtualError);\n  }, false);\n}\n\n/**\n * Wraps XMLHttpRequest to capture request and response data\n */\nfunction _wrapXHR(client: Client, options: HttpClientOptions): void {\n  if (!('XMLHttpRequest' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  addXhrInstrumentationHandler(handlerData => {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { error, virtualError } = handlerData;\n\n    const xhr = handlerData.xhr as SentryWrappedXMLHttpRequest & XMLHttpRequest;\n\n    const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n    if (!sentryXhrData) {\n      return;\n    }\n\n    const { method, request_headers: headers } = sentryXhrData;\n\n    try {\n      _xhrResponseHandler(options, xhr, method, headers, error || virtualError);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Error while extracting response event form XHR response', e);\n    }\n  });\n}\n\n/**\n * Checks whether to capture given response as an event\n *\n * @param status response status code\n * @param url response url\n */\nfunction _shouldCaptureResponse(options: HttpClientOptions, status: number, url: string): boolean {\n  return (\n    _isInGivenStatusRanges(options.failedRequestStatusCodes, status) &&\n    _isInGivenRequestTargets(options.failedRequestTargets, url) &&\n    !isSentryRequestUrl(url, getClient())\n  );\n}\n\n/**\n * Creates a synthetic Sentry event from given response data\n *\n * @param data response data\n * @returns event\n */\nfunction _createEvent(data: {\n  url: string;\n  method: string;\n  status: number;\n  responseHeaders?: Record<string, string>;\n  responseCookies?: Record<string, string>;\n  requestHeaders?: Record<string, string>;\n  requestCookies?: Record<string, string>;\n  error?: unknown;\n}): SentryEvent {\n  const client = getClient();\n  const virtualStackTrace = client && data.error && data.error instanceof Error ? data.error.stack : undefined;\n  // Remove the first frame from the stack as it's the HttpClient call\n  const stack = virtualStackTrace && client ? client.getOptions().stackParser(virtualStackTrace, 0, 1) : undefined;\n  const message = `HTTP Client Error with status code: ${data.status}`;\n\n  const event: SentryEvent = {\n    message,\n    exception: {\n      values: [\n        {\n          type: 'Error',\n          value: message,\n          stacktrace: stack ? { frames: stack } : undefined,\n        },\n      ],\n    },\n    request: {\n      url: data.url,\n      method: data.method,\n      headers: data.requestHeaders,\n      cookies: data.requestCookies,\n    },\n    contexts: {\n      response: {\n        status_code: data.status,\n        headers: data.responseHeaders,\n        cookies: data.responseCookies,\n        body_size: _getResponseSizeFromHeaders(data.responseHeaders),\n      },\n    },\n  };\n\n  addExceptionMechanism(event, {\n    type: 'http.client',\n    handled: false,\n  });\n\n  return event;\n}\n\nfunction _getRequest(requestInfo: RequestInfo, requestInit?: RequestInit): Request {\n  if (!requestInit && requestInfo instanceof Request) {\n    return requestInfo;\n  }\n\n  // If both are set, we try to construct a new Request with the given arguments\n  // However, if e.g. the original request has a `body`, this will throw an error because it was already accessed\n  // In this case, as a fallback, we just use the original request - using both is rather an edge case\n  if (requestInfo instanceof Request && requestInfo.bodyUsed) {\n    return requestInfo;\n  }\n\n  return new Request(requestInfo, requestInit);\n}\n\nfunction _shouldSendDefaultPii(): boolean {\n  const client = getClient();\n  return client ? Boolean(client.getOptions().sendDefaultPii) : false;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAmBA,MAAM,gBAAA,GAAmB,YAAY;AAuBrC,MAAM,sBAAA,GAA0B,CAAC,OAAO,GAA+B,CAAA,CAAE,KAAK;IAC5E,MAAM,QAAQ,GAAsB;QAClC,wBAAwB,EAAE;YAAC;gBAAC,GAAG;gBAAE,GAAG;aAAC;SAAC;QACtC,oBAAoB,EAAE;YAAC,IAAI;SAAC;QAC5B,GAAG,OAAO;IACd,CAAG;IAED,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,KAAK,EAAC,MAAM,EAAQ;YAClB,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC;YAC5B,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC;QAChC,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH;;CAEA,SACa,qBAAsB,0KAAE,oBAAA,AAAiB,EAAC,sBAAsB;AAE7E;;;;;;CAMA,GACA,SAAS,qBAAqB,CAC5B,OAAO,EACP,WAAW,EACX,QAAQ,EACR,WAAW,EACX,KAAK;IAEL,IAAI,sBAAsB,CAAC,OAAO,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE;QAClE,MAAM,UAAU,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC;QAErD,IAAI,cAAc,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe;QAEpE,IAAI,qBAAqB,EAAE,EAAE;YAC3B,CAAC,cAAc,EAAE,cAAc,CAAA,GAAI,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC;YACzE,CAAC,eAAe,EAAE,eAAe,CAAA,GAAI,mBAAmB,CAAC,YAAY,EAAE,QAAQ,CAAC;QACtF;QAEI,MAAM,KAAA,GAAQ,YAAY,CAAC;YACzB,GAAG,EAAE,OAAO,CAAC,GAAG;YAChB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,cAAc;YACd,eAAe;YACf,cAAc;YACd,eAAe;YACf,KAAK;QACX,CAAK,CAAC;2KAEF,eAAA,AAAY,EAAC,KAAK,CAAC;IACvB;AACA;AAEA,SAAS,mBAAmB,CAC1B,YAAY,EACZ,GAAG;IAEH,MAAM,UAAU,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC;IACjD,IAAI,OAAO;IAEX,IAAI;QACF,MAAM,YAAa,GAAE,OAAO,CAAC,YAAY,CAAE,IAAG,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAA,IAAK,SAAS;QAE9F,IAAI,YAAY,EAAE;YAChB,OAAQ,GAAE,kBAAkB,CAAC,YAAY,CAAC;QAChD;IACA,EAAI,OAAM,EAAA,EAAA;IACV,6BAAA;IACA;IAEE,OAAO;QAAC,OAAO;QAAE,OAAO;KAAC;AAC3B;AAEA;;;;;;CAMA,GACA,SAAS,mBAAmB,CAC1B,OAAO,EACP,GAAG,EACH,MAAM,EACN,OAAO,EACP,KAAK;IAEL,IAAI,sBAAsB,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,WAAW,CAAC,EAAE;QAChE,IAAI,cAAc,EAAE,eAAe,EAAE,eAAe;QAEpD,IAAI,qBAAqB,EAAE,EAAE;YAC3B,IAAI;gBACF,MAAM,YAAa,GAAE,GAAG,CAAC,iBAAiB,CAAC,YAAY,CAAE,IAAG,GAAG,CAAC,iBAAiB,CAAC,YAAY,CAAA,IAAK,SAAS;gBAE5G,IAAI,YAAY,EAAE;oBAChB,eAAgB,GAAE,kBAAkB,CAAC,YAAY,CAAC;gBAC5D;YACA,EAAQ,OAAM,EAAA,EAAA;YACd,6BAAA;YACA;YAEM,IAAI;gBACF,eAAgB,GAAE,sBAAsB,CAAC,GAAG,CAAC;YACrD,EAAQ,OAAM,EAAA,EAAA;YACd,6BAAA;YACA;YAEM,cAAA,GAAiB,OAAO;QAC9B;QAEI,MAAM,KAAA,GAAQ,YAAY,CAAC;YACzB,GAAG,EAAE,GAAG,CAAC,WAAW;YACpB,MAAM;YACN,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,cAAc;YACpB,wCAAA;YACM,eAAe;YACf,eAAe;YACf,KAAK;QACX,CAAK,CAAC;2KAEF,eAAA,AAAY,EAAC,KAAK,CAAC;IACvB;AACA;AAEA;;;;;CAKA,GACA,SAAS,2BAA2B,CAAC,OAAO,EAA+C;IACzF,IAAI,OAAO,EAAE;QACX,MAAM,aAAc,GAAE,OAAO,CAAC,gBAAgB,CAAA,IAAK,OAAO,CAAC,gBAAgB,CAAC;QAE5E,IAAI,aAAa,EAAE;YACjB,OAAO,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC;QACxC;IACA;IAEE,OAAO,SAAS;AAClB;AAEA;;;;;CAKA,GACA,SAAS,kBAAkB,CAAC,YAAY,EAAkC;IACxE,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAA0B,MAAM,KAAa;QACtF,MAAM,CAAC,GAAG,EAAE,KAAK,CAAA,GAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;QACtC,IAAI,GAAI,IAAG,KAAK,EAAE;YAChB,GAAG,CAAC,GAAG,CAAA,GAAI,KAAK;QACtB;QACI,OAAO,GAAG;IACd,CAAG,EAAE,CAAA,CAAE,CAAC;AACR;AAEA;;;;;CAKA,GACA,SAAS,oBAAoB,CAAC,OAAO,EAAmC;IACtE,MAAM,MAAM,GAA2B,CAAA,CAAE;IAEzC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;QAC9B,MAAM,CAAC,GAAG,CAAA,GAAI,KAAK;IACvB,CAAG,CAAC;IAEF,OAAO,MAAM;AACf;AAEA;;;;;CAKA,GACA,SAAS,sBAAsB,CAAC,GAAG,EAA0C;IAC3E,MAAM,OAAQ,GAAE,GAAG,CAAC,qBAAqB,EAAE;IAE3C,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,CAAA,CAAE;IACb;IAEE,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAA0B,IAAI,KAAa;QACjF,MAAM,CAAC,GAAG,EAAE,KAAK,CAAA,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACrC,IAAI,GAAI,IAAG,KAAK,EAAE;YAChB,GAAG,CAAC,GAAG,CAAA,GAAI,KAAK;QACtB;QACI,OAAO,GAAG;IACd,CAAG,EAAE,CAAA,CAAE,CAAC;AACR;AAEA;;;;;CAKA,GACA,SAAS,wBAAwB,CAC/B,oBAAoB,EACpB,MAAM;IAEN,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC,kBAAkB,KAAwB;QAC1E,IAAI,OAAO,kBAAmB,KAAI,QAAQ,EAAE;YAC1C,OAAO,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC;QAChD;QAEI,OAAO,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1C,CAAG,CAAC;AACJ;AAEA;;;;;CAKA,GACA,SAAS,sBAAsB,CAC7B,wBAAwB,EACxB,MAAM;IAEN,OAAO,wBAAwB,CAAC,IAAI,CAAC,CAAC,KAAK,KAA0B;QACnE,IAAI,OAAO,KAAM,KAAI,QAAQ,EAAE;YAC7B,OAAO,KAAM,KAAI,MAAM;QAC7B;QAEI,OAAO,MAAA,IAAU,KAAK,CAAC,CAAC,CAAE,IAAG,MAAO,IAAG,KAAK,CAAC,CAAC,CAAC;IACnD,CAAG,CAAC;AACJ;AAEA;;CAEA,GACA,SAAS,UAAU,CAAC,MAAM,EAAU,OAAO,EAA2B;IACpE,IAAI,CAAC,4MAAA,AAAmB,EAAE,GAAE;QAC1B;IACJ;qMAEE,iCAAA,AAA8B,GAAC,WAAA,IAAe;QAC5C,KAAI,oLAAA,AAAS,EAAG,MAAI,MAAM,EAAE;YAC1B;QACN;QAEI,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,YAAA,EAAe,GAAE,WAAW;QAC3D,MAAM,CAAC,WAAW,EAAE,WAAW,CAAA,GAAI,IAAK;QAExC,IAAI,CAAC,QAAQ,EAAE;YACb;QACN;QAEI,qBAAqB,CAAC,OAAO,EAAE,WAAW,EAAE,QAAS,EAAa,WAAW,EAAE,KAAM,IAAG,YAAY,CAAC;IACzG,CAAG,EAAE,KAAK,CAAC;AACX;AAEA;;CAEA,GACA,SAAS,QAAQ,CAAC,MAAM,EAAU,OAAO,EAA2B;IAClE,IAAI,CAAA,CAAE,uMAAoB,aAAU,CAAC,EAAE;QACrC;IACJ;yMAEE,+BAAA,AAA4B,GAAC,WAAA,IAAe;QAC1C,QAAI,iLAAA,AAAS,EAAG,MAAI,MAAM,EAAE;YAC1B;QACN;QAEI,MAAM,EAAE,KAAK,EAAE,YAAa,EAAA,GAAI,WAAW;QAE3C,MAAM,GAAA,GAAM,WAAW,CAAC,GAAI;QAE5B,MAAM,aAAc,GAAE,GAAG,iMAAC,uBAAmB,CAAC;QAE9C,IAAI,CAAC,aAAa,EAAE;YAClB;QACN;QAEI,MAAM,EAAE,MAAM,EAAE,eAAe,EAAE,OAAA,EAAU,GAAE,aAAa;QAE1D,IAAI;YACF,mBAAmB,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,KAAM,IAAG,YAAY,CAAC;QAC/E,CAAM,CAAA,OAAO,CAAC,EAAE;4LACV,cAAA,oLAAe,SAAM,CAAC,IAAI,CAAC,yDAAyD,EAAE,CAAC,CAAC;QAC9F;IACA,CAAG,CAAC;AACJ;AAEA;;;;;CAKA,GACA,SAAS,sBAAsB,CAAC,OAAO,EAAqB,MAAM,EAAU,GAAG,EAAmB;IAChG,OACE,sBAAsB,CAAC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAE,IACjE,wBAAwB,CAAC,OAAO,CAAC,oBAAoB,EAAE,GAAG,CAAE,IAC5D,wLAAC,qBAAA,AAAkB,EAAC,GAAG,GAAE,oLAAA,AAAS,EAAE;AAExC;AAEA;;;;;CAKA,GACA,SAAS,YAAY,CAAC,IAAA;IAUpB,MAAM,MAAA,4KAAS,YAAA,AAAS,EAAE;IAC1B,MAAM,oBAAoB,MAAA,IAAU,IAAI,CAAC,KAAA,IAAS,IAAI,CAAC,KAAM,YAAW,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAM,GAAE,SAAS;IAC9G,oEAAA;IACE,MAAM,QAAQ,iBAAA,IAAqB,MAAO,GAAE,MAAM,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAE,GAAE,SAAS;IAChH,MAAM,OAAQ,GAAE,CAAC,oCAAoC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;IAEA,MAAA,KAAA,GAAA;QACA,OAAA;QACA,SAAA,EAAA;YACA,MAAA,EAAA;gBACA;oBACA,IAAA,EAAA,OAAA;oBACA,KAAA,EAAA,OAAA;oBACA,UAAA,EAAA,KAAA,GAAA;wBAAA,MAAA,EAAA,KAAA;oBAAA,CAAA,GAAA,SAAA;gBACA,CAAA;aACA;QACA,CAAA;QACA,OAAA,EAAA;YACA,GAAA,EAAA,IAAA,CAAA,GAAA;YACA,MAAA,EAAA,IAAA,CAAA,MAAA;YACA,OAAA,EAAA,IAAA,CAAA,cAAA;YACA,OAAA,EAAA,IAAA,CAAA,cAAA;QACA,CAAA;QACA,QAAA,EAAA;YACA,QAAA,EAAA;gBACA,WAAA,EAAA,IAAA,CAAA,MAAA;gBACA,OAAA,EAAA,IAAA,CAAA,eAAA;gBACA,OAAA,EAAA,IAAA,CAAA,eAAA;gBACA,SAAA,EAAA,2BAAA,CAAA,IAAA,CAAA,eAAA,CAAA;YACA,CAAA;QACA,CAAA;IACA,CAAA;sLAEA,wBAAA,EAAA,KAAA,EAAA;QACA,IAAA,EAAA,aAAA;QACA,OAAA,EAAA,KAAA;IACA,CAAA,CAAA;IAEA,OAAA,KAAA;AACA;AAEA,SAAA,WAAA,CAAA,WAAA,EAAA,WAAA,EAAA;IACA,IAAA,CAAA,WAAA,IAAA,WAAA,YAAA,OAAA,EAAA;QACA,OAAA,WAAA;IACA;IAEA,8EAAA;IACA,+GAAA;IACA,oGAAA;IACA,IAAA,WAAA,YAAA,OAAA,IAAA,WAAA,CAAA,QAAA,EAAA;QACA,OAAA,WAAA;IACA;IAEA,OAAA,IAAA,OAAA,CAAA,WAAA,EAAA,WAAA,CAAA;AACA;AAEA,SAAA,qBAAA,GAAA;IACA,MAAA,MAAA,4KAAA,YAAA,EAAA;IACA,OAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA,UAAA,EAAA,CAAA,cAAA,CAAA,GAAA,KAAA;AACA","ignoreList":[0]}},
    {"offset": {"line": 4156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4162, "column": 0}, "map": {"version":3,"file":"offline.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/transports/offline.ts"],"sourcesContent":["import type { BaseTransportOptions, Envelope, OfflineStore, OfflineTransportOptions, Transport } from '@sentry/core';\nimport { makeOfflineTransport, parseEnvelope, serializeEnvelope } from '@sentry/core';\nimport { makeFetchTransport } from './fetch';\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original license:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ntype Store = <T>(callback: (store: IDBObjectStore) => T | PromiseLike<T>) => Promise<T>;\n\nfunction promisifyRequest<T = undefined>(request: IDBRequest<T> | IDBTransaction): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    // @ts-expect-error - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-expect-error - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nexport function createStore(dbName: string, storeName: string): Store {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store: IDBObjectStore): Promise<number[]> {\n  return promisifyRequest(store.getAllKeys() as IDBRequest<number[]>);\n}\n\n/** Insert into the end of the store */\nexport function push(store: Store, value: Uint8Array | string, maxQueueSize: number): Promise<void> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Insert into the front of the store */\nexport function unshift(store: Store, value: Uint8Array | string, maxQueueSize: number): Promise<void> {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an decremented key so that the entries are popped in order\n      store.put(value, Math.min(...keys, 0) - 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nexport function shift(store: Store): Promise<Uint8Array | string | undefined> {\n  return store(store => {\n    return keys(store).then(keys => {\n      const firstKey = keys[0];\n      if (firstKey == null) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(firstKey)).then(value => {\n        store.delete(firstKey);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nexport interface BrowserOfflineTransportOptions extends Omit<OfflineTransportOptions, 'createStore'> {\n  /**\n   * Name of indexedDb database to store envelopes in\n   * Default: 'sentry-offline'\n   */\n  dbName?: string;\n  /**\n   * Name of indexedDb object store to store envelopes in\n   * Default: 'queue'\n   */\n  storeName?: string;\n  /**\n   * Maximum number of envelopes to store\n   * Default: 30\n   */\n  maxQueueSize?: number;\n}\n\nfunction createIndexedDbStore(options: BrowserOfflineTransportOptions): OfflineStore {\n  let store: Store | undefined;\n\n  // Lazily create the store only when it's needed\n  function getStore(): Store {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    push: async (env: Envelope) => {\n      try {\n        const serialized = await serializeEnvelope(env);\n        await push(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    unshift: async (env: Envelope) => {\n      try {\n        const serialized = await serializeEnvelope(env);\n        await unshift(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    shift: async () => {\n      try {\n        const deserialized = await shift(getStore());\n        if (deserialized) {\n          return parseEnvelope(deserialized);\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport<T>(\n  createTransport: (options: T) => Transport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return options => createTransport({ ...options, createStore: createIndexedDbStore });\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nexport function makeBrowserOfflineTransport<T extends BaseTransportOptions>(\n  createTransport: (options: T) => Transport = makeFetchTransport,\n): (options: T & BrowserOfflineTransportOptions) => Transport {\n  return makeIndexedDbOfflineTransport<T>(makeOfflineTransport(createTransport));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4305, "column": 0}, "map": {"version":3,"file":"metrics.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/metrics.ts"],"sourcesContent":["import { BrowserMetricsAggregator, metrics as metricsCore } from '@sentry/core';\nimport type { DurationUnit, MetricData, Metrics } from '@sentry/core';\n\n/**\n * Adds a value to a counter metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction increment(name: string, value: number = 1, data?: MetricData): void {\n  // eslint-disable-next-line deprecation/deprecation\n  metricsCore.increment(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction distribution(name: string, value: number, data?: MetricData): void {\n  // eslint-disable-next-line deprecation/deprecation\n  metricsCore.distribution(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction set(name: string, value: number | string, data?: MetricData): void {\n  // eslint-disable-next-line deprecation/deprecation\n  metricsCore.set(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction gauge(name: string, value: number, data?: MetricData): void {\n  // eslint-disable-next-line deprecation/deprecation\n  metricsCore.gauge(BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @deprecated The Sentry metrics beta has ended. This method will be removed in a future release.\n */\nfunction timing(name: string, value: number, unit?: DurationUnit, data?: Omit<MetricData, 'unit'>): void;\nfunction timing<T>(name: string, callback: () => T, unit?: DurationUnit, data?: Omit<MetricData, 'unit'>): T;\nfunction timing<T = void>(\n  name: string,\n  value: number | (() => T),\n  unit: DurationUnit = 'second',\n  data?: Omit<MetricData, 'unit'>,\n): T | void {\n  // eslint-disable-next-line deprecation/deprecation\n  return metricsCore.timing(BrowserMetricsAggregator, name, value, unit, data);\n}\n\n/**\n * The metrics API is used to capture custom metrics in Sentry.\n *\n * @deprecated The Sentry metrics beta has ended. This export will be removed in a future release.\n */\nexport const metrics: Metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n};\n"],"names":["metricsCore"],"mappings":";;;;;;AAGA;;;;CAIA,GACA,SAAS,SAAS,CAAC,IAAI,EAAU,KAAK,GAAW,CAAC,EAAE,IAAI,EAAqB;IAC7E,mDAAA;8KACEA,UAAW,CAAC,SAAS,yLAAC,2BAAwB,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AACpE;AAEA;;;;CAIA,GACA,SAAS,YAAY,CAAC,IAAI,EAAU,KAAK,EAAU,IAAI,EAAqB;IAC5E,mDAAA;8KACEA,UAAW,CAAC,YAAY,yLAAC,2BAAwB,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AACvE;AAEA;;;;CAIA,GACA,SAAS,GAAG,CAAC,IAAI,EAAU,KAAK,EAAmB,IAAI,EAAqB;IAC5E,mDAAA;8KACEA,UAAW,CAAC,GAAG,yLAAC,2BAAwB,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AAC9D;AAEA;;;;CAIA,GACA,SAAS,KAAK,CAAC,IAAI,EAAU,KAAK,EAAU,IAAI,EAAqB;IACrE,mDAAA;8KACEA,UAAW,CAAC,KAAK,yLAAC,2BAAwB,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AAChE;AAEA;;;;;;;;CAQA,GAGA,SAAS,MAAM,CACb,IAAI,EACJ,KAAK,EACL,IAAI,GAAiB,QAAQ,EAC7B,IAAI;IAEN,mDAAA;IACE,iLAAOA,UAAW,CAAC,MAAM,yLAAC,2BAAwB,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;AAC9E;AAEA;;;;CAIA,GACO,MAAM,OAAO,GAAY;IAC9B,SAAS;IACT,YAAY;IACZ,GAAG;IACH,KAAK;IACL,MAAM;AACR","ignoreList":[0]}},
    {"offset": {"line": 4368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4374, "column": 0}, "map": {"version":3,"file":"reportingobserver.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/reportingobserver.ts"],"sourcesContent":["import type { Client, IntegrationFn } from '@sentry/core';\nimport {\n  GLOBAL_OBJ,\n  captureMessage,\n  defineIntegration,\n  getClient,\n  supportsReportingObserver,\n  withScope,\n} from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nconst INTEGRATION_NAME = 'ReportingObserver';\n\ninterface Report {\n  [key: string]: unknown;\n  type: ReportTypes;\n  url: string;\n  body?: ReportBody;\n}\n\ntype ReportTypes = 'crash' | 'deprecation' | 'intervention';\n\ntype ReportBody = CrashReportBody | DeprecationReportBody | InterventionReportBody;\n\ninterface CrashReportBody {\n  [key: string]: unknown;\n  crashId: string;\n  reason?: string;\n}\n\ninterface DeprecationReportBody {\n  [key: string]: unknown;\n  id: string;\n  anticipatedRemoval?: Date;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface InterventionReportBody {\n  [key: string]: unknown;\n  id: string;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface ReportingObserverOptions {\n  types?: ReportTypes[];\n}\n\n/** This is experimental and the types are not included with TypeScript, sadly. */\ninterface ReportingObserverClass {\n  new (\n    handler: (reports: Report[]) => void,\n    options: { buffered?: boolean; types?: ReportTypes[] },\n  ): {\n    observe: () => void;\n  };\n}\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _reportingObserverIntegration = ((options: ReportingObserverOptions = {}) => {\n  const types = options.types || ['crash', 'deprecation', 'intervention'];\n\n  /** Handler for the reporting observer. */\n  function handler(reports: Report[]): void {\n    if (!SETUP_CLIENTS.has(getClient() as Client)) {\n      return;\n    }\n\n    for (const report of reports) {\n      withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inherited\n          const plainBody: {\n            [key: string]: unknown;\n          } = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body as CrashReportBody;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body as DeprecationReportBody | InterventionReportBody;\n            details = body.message || details;\n          }\n        }\n\n        captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!supportsReportingObserver()) {\n        return;\n      }\n\n      const observer = new (WINDOW as typeof WINDOW & { ReportingObserver: ReportingObserverClass }).ReportingObserver(\n        handler,\n        {\n          buffered: true,\n          types,\n        },\n      );\n\n      observer.observe();\n    },\n\n    setup(client): void {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Reporting API integration - https://w3c.github.io/reporting/\n */\nexport const reportingObserverIntegration = defineIntegration(_reportingObserverIntegration);\n"],"names":[],"mappings":";;;;;;;;;AAUA,MAAM,MAAA,sLAAS,aAAW;AAE1B,MAAM,gBAAA,GAAmB,mBAAmB;AAoD5C,MAAM,aAAc,GAAE,IAAI,OAAO,EAAmB;AAEpD,MAAM,6BAAA,GAAiC,CAAC,OAAO,GAA6B,CAAA,CAAE,KAAK;IACjF,MAAM,KAAA,GAAQ,OAAO,CAAC,KAAA,IAAS;QAAC,OAAO;QAAE,aAAa;QAAE,cAAc;KAAC;IAEzE,wCAAA,GACE,SAAS,OAAO,CAAC,OAAO,EAAkB;QACxC,IAAI,CAAC,aAAa,CAAC,GAAG,0KAAC,YAAA,AAAS,EAAG,EAAU,EAAE;YAC7C;QACN;QAEI,KAAK,MAAM,MAAO,IAAG,OAAO,CAAE;qLAC5B,YAAA,AAAS,GAAC,KAAA,IAAS;gBACjB,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC;gBAEjC,MAAM,KAAM,GAAE,CAAC,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClD,IAAI,OAAQ,GAAE,sBAAsB;gBAEpC,IAAI,MAAM,CAAC,IAAI,EAAE;oBACzB,0EAAA;oBACU,MAAM,YAEF,CAAA,CAAE;oBAEhB,wCAAA;oBACU,IAAK,MAAM,IAAA,IAAQ,MAAM,CAAC,IAAI,CAAE;wBAC9B,SAAS,CAAC,IAAI,CAAE,GAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC/C;oBAEU,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC;oBAEjC,IAAI,MAAM,CAAC,IAAK,KAAI,OAAO,EAAE;wBAC3B,MAAM,IAAA,GAAO,MAAM,CAAC,IAAK;wBACrC,+EAAA;wBACY,OAAA,GAAU;4BAAC,IAAI,CAAC,OAAA,IAAW,EAAE;4BAAE,IAAI,CAAC,MAAA,IAAU,EAAE;yBAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAG,IAAG,OAAO;oBACzF,OAAiB;wBACL,MAAM,IAAA,GAAO,MAAM,CAAC,IAAK;wBACzB,UAAU,IAAI,CAAC,OAAA,IAAW,OAAO;oBAC7C;gBACA;mLAEQ,iBAAA,AAAc,EAAC,CAAC,EAAA,KAAA,CAAA,EAAA,EAAA,OAAA,CAAA,CAAA,CAAA;YACA,CAAA,CAAA;QACA;IACA;IAEA,OAAA;QACA,IAAA,EAAA,gBAAA;QACA,SAAA,GAAA;YACA,IAAA,EAAA,iNAAA,EAAA,GAAA;gBACA;YACA;YAEA,MAAA,QAAA,GAAA,IAAA,MAAA,CAAA,iBAAA,CACA,OAAA,EACA;gBACA,QAAA,EAAA,IAAA;gBACA,KAAA;YACA,CAAA;YAGA,QAAA,CAAA,OAAA,EAAA;QACA,CAAA;QAEA,KAAA,EAAA,MAAA,EAAA;YACA,aAAA,CAAA,GAAA,CAAA,MAAA,EAAA,IAAA,CAAA;QACA,CAAA;IACA,CAAA;AACA,CAAA,CAAA;AAEA;;CAEA,GACA,MAAA,4BAAA,0KAAA,oBAAA,EAAA,6BAAA","ignoreList":[0]}},
    {"offset": {"line": 4447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4453, "column": 0}, "map": {"version":3,"file":"spotlight.js","sources":["file:///Users/antoniocaballes/repairticketing/node_modules/%40sentry/browser/src/integrations/spotlight.ts"],"sourcesContent":["import { getNativeImplementation } from '@sentry-internal/browser-utils';\nimport type { Client, Envelope, Event, IntegrationFn } from '@sentry/core';\nimport { defineIntegration, logger, serializeEnvelope } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WINDOW } from '../helpers';\n\nexport type SpotlightConnectionOptions = {\n  /**\n   * Set this if the Spotlight Sidecar is not running on localhost:8969\n   * By default, the Url is set to http://localhost:8969/stream\n   */\n  sidecarUrl?: string;\n};\n\nexport const INTEGRATION_NAME = 'SpotlightBrowser';\n\nconst _spotlightIntegration = ((options: Partial<SpotlightConnectionOptions> = {}) => {\n  const sidecarUrl = options.sidecarUrl || 'http://localhost:8969/stream';\n\n  return {\n    name: INTEGRATION_NAME,\n    setup: () => {\n      DEBUG_BUILD && logger.log('Using Sidecar URL', sidecarUrl);\n    },\n    // We don't want to send interaction transactions/root spans created from\n    // clicks within Spotlight to Sentry. Neither do we want them to be sent to\n    // spotlight.\n    processEvent: event => (isSpotlightInteraction(event) ? null : event),\n    afterAllSetup: (client: Client) => {\n      setupSidecarForwarding(client, sidecarUrl);\n    },\n  };\n}) satisfies IntegrationFn;\n\nfunction setupSidecarForwarding(client: Client, sidecarUrl: string): void {\n  const makeFetch: typeof WINDOW.fetch | undefined = getNativeImplementation('fetch');\n  let failCount = 0;\n\n  client.on('beforeEnvelope', (envelope: Envelope) => {\n    if (failCount > 3) {\n      logger.warn('[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests:', failCount);\n      return;\n    }\n\n    makeFetch(sidecarUrl, {\n      method: 'POST',\n      body: serializeEnvelope(envelope),\n      headers: {\n        'Content-Type': 'application/x-sentry-envelope',\n      },\n      mode: 'cors',\n    }).then(\n      res => {\n        if (res.status >= 200 && res.status < 400) {\n          // Reset failed requests counter on success\n          failCount = 0;\n        }\n      },\n      err => {\n        failCount++;\n        logger.error(\n          \"Sentry SDK can't connect to Sidecar is it running? See: https://spotlightjs.com/sidecar/npx/\",\n          err,\n        );\n      },\n    );\n  });\n}\n\n/**\n * Use this integration to send errors and transactions to Spotlight.\n *\n * Learn more about spotlight at https://spotlightjs.com\n */\nexport const spotlightBrowserIntegration = defineIntegration(_spotlightIntegration);\n\n/**\n * Flags if the event is a transaction created from an interaction with the spotlight UI.\n */\nexport function isSpotlightInteraction(event: Event): boolean {\n  return Boolean(\n    event.type === 'transaction' &&\n      event.spans &&\n      event.contexts &&\n      event.contexts.trace &&\n      event.contexts.trace.op === 'ui.action.click' &&\n      event.spans.some(({ description }) => description && description.includes('#sentry-spotlight')),\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAcO,MAAM,gBAAiB,GAAE;AAEhC,MAAM,qBAAA,GAAyB,CAAC,OAAO,GAAwC,CAAA,CAAE,KAAK;IACpF,MAAM,UAAW,GAAE,OAAO,CAAC,UAAA,IAAc,8BAA8B;IAEvE,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,KAAK,EAAE,MAAM;4LACX,cAAA,oLAAe,SAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,CAAC;QAChE,CAAK;QACL,yEAAA;QACA,2EAAA;QACA,aAAA;QACI,YAAY,GAAE,KAAM,GAAI,sBAAsB,CAAC,KAAK,CAAE,GAAE,IAAK,GAAE,KAAK,CAAC;QACrE,aAAa,EAAE,CAAC,MAAM,KAAa;YACjC,sBAAsB,CAAC,MAAM,EAAE,UAAU,CAAC;QAChD,CAAK;IACL,CAAG;AACH,CAAC,CAAE;AAEH,SAAS,sBAAsB,CAAC,MAAM,EAAU,UAAU,EAAgB;IACxE,MAAM,SAAS,8MAAoC,0BAAA,AAAuB,EAAC,OAAO,CAAC;IACnF,IAAI,SAAU,GAAE,CAAC;IAEjB,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,QAAQ,KAAe;QAClD,IAAI,SAAU,GAAE,CAAC,EAAE;2LACjB,UAAM,CAAC,IAAI,CAAC,uFAAuF,EAAE,SAAS,CAAC;YAC/G;QACN;QAEI,SAAS,CAAC,UAAU,EAAE;YACpB,MAAM,EAAE,MAAM;YACd,IAAI,wLAAE,oBAAA,AAAiB,EAAC,QAAQ,CAAC;YACjC,OAAO,EAAE;gBACP,cAAc,EAAE,+BAA+B;YACvD,CAAO;YACD,IAAI,EAAE,MAAM;QAClB,CAAK,CAAC,CAAC,IAAI,EACL,OAAO;YACL,IAAI,GAAG,CAAC,MAAO,IAAG,GAAI,IAAG,GAAG,CAAC,MAAO,GAAE,GAAG,EAAE;gBACnD,2CAAA;gBACU,SAAA,GAAY,CAAC;YACvB;QACA,CAAO,GACD,OAAO;YACL,SAAS,EAAE;2LACX,UAAM,CAAC,KAAK,CACV,8FAA8F,EAC9F,GAAG;QAEb,CAAO;IAEP,CAAG,CAAC;AACJ;AAEA;;;;CAIA,SACa,2BAA4B,0KAAE,oBAAA,AAAiB,EAAC,qBAAqB;AAElF;;CAEA,GACO,SAAS,sBAAsB,CAAC,KAAK,EAAkB;IAC5D,OAAO,OAAO,CACZ,KAAK,CAAC,IAAK,KAAI,aAAc,IAC3B,KAAK,CAAC,KAAM,IACZ,KAAK,CAAC,QAAS,IACf,KAAK,CAAC,QAAQ,CAAC,KAAM,IACrB,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAA,KAAO,iBAAkB,IAC9C,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,WAAY,EAAC,GAAK,WAAA,IAAe,WAAW,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;AAErG","ignoreList":[0]}},
    {"offset": {"line": 4521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}